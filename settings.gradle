import org.gradle.api.initialization.resolve.RepositoriesMode

if (file("secrets.gradle").exists()) {
	apply from: "secrets.gradle"
} else {
	ext.githubUsername = System.getenv("GITHUB_ACTOR")
	ext.githubToken = System.getenv("GITHUB_TOKEN")
}

rootProject.name = 'di-ipv-core-back'
include "lambdas",
		"lambdas:build-client-oauth-response",
		"lambdas:build-cri-oauth-request",
		"lambdas:build-proven-user-identity-details",
		"lambdas:build-user-identity",
		"lambdas:call-dcmaw-async-cri",
		"lambdas:call-ticf-cri",
		"lambdas:check-coi",
		"lambdas:check-existing-identity",
		"lambdas:check-gpg45-score",
		"lambdas:evaluate-gpg45-scores",
		"lambdas:initialise-ipv-session",
		"lambdas:issue-client-access-token",
		"lambdas:process-async-cri-credential",
		"lambdas:process-cri-callback",
		"lambdas:process-journey-event",
		"lambdas:replay-cimit-vcs",
		"lambdas:reset-session-identity",
		"lambdas:restore-vcs",
		"lambdas:revoke-vcs",
		"lambdas:store-identity",
		"lambdas:user-reverification",
		"libs:audit-service",
		"libs:cimit-service",
		"libs:common-services",
		"libs:cri-api-service",
		"libs:cri-response-service",
		"libs:cri-storing-service",
		"libs:email-service",
		"libs:evcs-service",
		"libs:gpg45-evaluator",
		"libs:journey-uris",
		"libs:kms-es256-signer",
		"libs:pact-test-helpers",
		"libs:user-identity-service",
		"libs:verifiable-credentials",
		"local-running"

dependencyResolutionManagement {
	repositoriesMode = RepositoriesMode.FAIL_ON_PROJECT_REPOS
	repositories {
		mavenCentral()
		maven {
			url = uri("https://maven.pkg.github.com/govuk-one-login/data-vocab")
			credentials {
				username = githubUsername
				password = githubToken
			}
		}
	}
}
