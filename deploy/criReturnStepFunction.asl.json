{
  "StartAt": "ValidateOauthCallback",
  "States": {
    "ValidateOauthCallback": {
      "Type": "Task",
      "Resource": "${ValidateOAuthCallbackFunctionArn}",
      "ResultPath": "$.lambdaResult",
      "Next": "RouteJourneyResponse"
    },
    "RetrieveCriOauthAccessToken": {
      "Type": "Task",
      "Resource": "${RetrieveCriOauthAccessTokenFunctionArn}",
      "Parameters": {
        "ipvSessionId.$": "$.ipvSessionId",
        "journey.$": "$.lambdaResult.journey"
      },
      "ResultPath": "$.lambdaResult",
      "Next": "RouteJourneyResponse"
    },
    "RetrieveCriCredential": {
      "Type": "Task",
      "Resource": "${RetrieveCriCredentialFunctionArn}",
      "Parameters": {
        "ipvSessionId.$": "$.ipvSessionId",
        "journey.$": "$.lambdaResult.journey"
      },
      "ResultPath": "$.lambdaResult",
      "Next": "RouteJourneyResponse"
    },
    "ProcessJourneyStep": {
      "Type": "Task",
      "Resource": "${IPVProcessJourneyStepFunctionArn}",
      "Parameters": {
        "ipvSessionId.$": "$.ipvSessionId",
        "journey.$": "$.lambdaResult.journey"
      },
      "ResultPath": "$.lambdaResult",
      "Next": "RouteJourneyResponse"
    },
    "ReturnToFrontend": {
      "Type": "Succeed",
      "OutputPath": "$.lambdaResult"
    },
    "RouteJourneyResponse": {
      "Type": "Choice",
      "Choices": [
        {
          "Not": {
            "Variable": "$.lambdaResult.journey",
            "IsPresent": true
          },
          "Next": "ReturnToFrontend"
        },
        {
          "Variable": "$.lambdaResult.journey",
          "StringEquals": "/journey/next",
          "Next": "ProcessJourneyStep"
        },
        {
          "Variable": "$.lambdaResult.journey",
          "StringEquals": "/journey/access-denied",
          "Next": "ProcessJourneyStep"
        },
        {
          "Variable": "$.lambdaResult.journey",
          "StringEquals": "/journey/error",
          "Next": "ProcessJourneyStep"
        },
        {
          "Variable": "$.lambdaResult.journey",
          "StringEquals": "/journey/cri/access-token",
          "Next": "RetrieveCriOauthAccessToken"
        },
        {
          "Variable": "$.lambdaResult.journey",
          "StringEquals": "/journey/cri/credential",
          "Next": "RetrieveCriCredential"
        }
      ],
      "Default": "ReturnToFrontend"
    }
  }
}
