AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  This creates the necessary serverless components for IPV Core-Back.

Globals:
  Function:
    Timeout: 40
    Environment:
      Variables:
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1

Parameters:
  Environment:
    Type: String
  PassportCriId:
    Type: String
    Description: The passport cri id which relates to the cri config in parameter store to be used by the journey engine
    Default: ukPassport
  FraudCriId:
    Type: String
    Description: The fraud cri id which relates to the cri config in parameter store to be used by the journey engine
    Default: fraud
  KbvCriId:
    Type: String
    Description: The kbv cri id which relates to the cri config in parameter store to be used by the journey engine
    Default: kbv
  AddressCriId:
    Type: String
    Description: The address cri id which relates to the cri config in parameter store to be used by the journey engine
    Default: address

Conditions:
  AddProvisionedConcurrency: !Not
    - !Equals
      - !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
      -  0
  IsDevelopment: !Not
    - !Or
      - !Equals [ !Ref Environment, "build"]
      - !Equals [ !Ref Environment, "staging"]
      - !Equals [ !Ref Environment, "integration"]
      - !Equals [ !Ref Environment, "production"]
  IsNotDevelopment: !Not [ !Condition IsDevelopment ]

# The AWS Account Id is used in the following mapping section because we have
# multiple developer environments and it is undesirable to have to keep this
# mapping up to date with each developer environment.
Mappings:
  EnvironmentConfiguration:
    "130355686670": # Development
      provisionedConcurrency: 0
    "457601271792": # Build
      provisionedConcurrency: 0
    "335257547869": # Staging
      provisionedConcurrency: 1
    "991138514218": # Integration
      provisionedConcurrency: 1
    "075701497069": # Production
      provisionedConcurrency: 1

Resources:
  IPVCorePrivateAPI:
    Type: AWS::Serverless::Api
    Properties:
      # checkov:skip=CKV_AWS_120: We are not implementing API Gateway caching at the time.
      Name: !Sub IPV Core Private API Gateway ${Environment}
      EndpointConfiguration:
        Type: PRIVATE
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Action: 'execute-api:Invoke'
              Effect: Allow
              Principal: '*'
              Resource:
                - 'execute-api:/*'
            - Action: 'execute-api:Invoke'
              Effect: Deny
              Principal: '*'
              Resource:
                - 'execute-api:/*'
              Condition:
                StringNotEquals:
                  'aws:SourceVpce': !If
                    - IsDevelopment
                    - !ImportValue "network-shared-development-ApiGatewayVpcEndpointId"
                    - Fn::ImportValue:
                        !Sub "networking-${Environment}-ApiGatewayVpcEndpointId"
      StageName: !Sub ${Environment}
      TracingEnabled: true
      AccessLogSetting:
        DestinationArn: !GetAtt IPVCorePrivateAPILogGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }

  IPVCorePrivateAPILogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-CoreBackPrivate-API-GW-AccessLogs
      RetentionInDays: 14
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  IPVCorePrivateAPILogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVCorePrivateAPILogGroup

  IPVCoreExternalAPI:
    Type: AWS::Serverless::Api
    Properties:
      # checkov:skip=CKV_AWS_120: We are not implementing API Gateway caching at the time.
      Name: !Sub IPV Core External API Gateway ${Environment}
      StageName: !Sub ${Environment}
      TracingEnabled: true
      DefinitionBody:
        'Fn::Transform':
          Name: "AWS::Include"
          Parameters:
            Location: "../openAPI/core-back-external.yaml"
      AccessLogSetting:
        DestinationArn: !GetAtt IPVCoreExternalAPILogGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }

  IPVCoreExternalAPILogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-CoreBackExternal-API-GW-AccessLogs
      RetentionInDays: 14
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  IPVCoreExternalAPILogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVCoreExternalAPILogGroup

  IssueClientAccessTokenFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "IssueClientAccessTokenFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "issue-client-access-token-${Environment}"
      Handler: uk.gov.di.ipv.core.issueclientaccesstoken.IssueClientAccessTokenHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/issue-client-access-token
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub issue-client-access-token-${Environment}
          CLIENT_AUTH_JWT_IDS_TABLE_NAME: !Ref ClientAuthJwtIdsTable
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ClientAuthJwtIdsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/clients/*
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/self/*
      Events:
        IPVCoreExternalAPI:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCoreExternalAPI
            Path: /token
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
          - !Ref AWS::NoValue

  IssueClientAccessTokenFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/issue-client-access-token-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  IssueClientAccessTokenFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IssueClientAccessTokenFunctionLogGroup

  BuildClientOauthResponseToBeRemovedFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "BuildClientOauthResponseToBeRemovedFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "build-client-oauth-response-TO-BE-REMOVED-${Environment}"
      Handler: uk.gov.di.ipv.core.buildclientoauthresponse.BuildClientOauthResponseHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/build-client-oauth-response
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub build-client-oauth-response-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - SSMParameterReadPolicy:
              ParameterName: !Sub ${Environment}/core/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /journey/session/end
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
          - !Ref AWS::NoValue

  BuildClientOauthResponseToBeRemoveFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/build-client-oauth-response-TO-BE-REMOVED-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  BuildClientOauthResponseToBeRemovedFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref BuildClientOauthResponseToBeRemovedFunctionLogGroup

  BuildClientOauthResponseFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "BuildClientOauthResponseFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "build-client-oauth-response-${Environment}"
      Handler: uk.gov.di.ipv.core.buildclientoauthresponse.BuildClientOauthResponseHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/build-client-oauth-response
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub build-client-oauth-response-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /journey/build-client-oauth-response
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
        - AddProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
        - !Ref AWS::NoValue

  BuildClientOauthResponseFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/build-client-oauth-response-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  BuildClientOauthResponseFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref BuildClientOauthResponseFunctionLogGroup

  IPVSessionStartFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "IPVSessionStartFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "ipv-session-start-${Environment}"
      Handler: uk.gov.di.ipv.core.session.IpvSessionStartHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/sessionstart
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub session-start-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Select [1, !Split ['/', !GetAtt SessionsTable.Arn]]
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/clients/*
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/self/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: jarKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue CoreEncryptionKeyArn
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /session/start
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
          - !Ref AWS::NoValue

  IPVSessionStartFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/ipv-session-start-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  IPVSessionStartFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVSessionStartFunctionLogGroup

# TODO: Remove this lambda after front-end swaps to using new endpoint
  RetrieveCriOauthAccessTokenFunctionToBeRemoved:
    Type: AWS::Serverless::Function
    DependsOn:
      - "RetrieveCriOauthAccessTokenFunctionToBeRemovedLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "retrieve-cri-oauth-access-token-TO-BE-REMOVED-${Environment}"
      Handler: uk.gov.di.ipv.core.retrievecrioauthaccesstoken.RetrieveCriOauthAccessTokenHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/retrieve-cri-oauth-access-token
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub "/${Environment}/core/credentialIssuers"
          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Select [1, !Split ['/', !GetAtt UserIssuedCredentialsV2Table.Arn]]
          SIGNING_KEY_ID_PARAM: !Sub "/${Environment}/core/self/signingKeyId"
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub retrieve-cri-oauth-access-token-${Environment}
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserIssuedCredentialsV2Table
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/credentialIssuers/*
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/credentialIssuers
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/self/*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:${Environment}/credential-issuers/*/api-key-*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
          - Sid: kmsSigningKeyPermission
            Effect: Allow
            Action:
              - 'kms:sign'
            Resource:
              - !ImportValue SigningKeyArn
          - Sid: kmsAuditEventQueueEncryptionKeyPermission
            Effect: Allow
            Action:
              - 'kms:Decrypt'
              - 'kms:GenerateDataKey'
            Resource:
              - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /journey/cri/return
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
          - !Ref AWS::NoValue

  RetrieveCriOauthAccessTokenFunctionToBeRemovedLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/retrieve-cri-oauth-access-token-TO-BE-REMOVED-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  RetrieveCriOauthAccessTokenFunctionToBeRemovedLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref RetrieveCriOauthAccessTokenFunctionToBeRemovedLogGroup


  RetrieveCriOauthAccessTokenFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "RetrieveCriOauthAccessTokenFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "retrieve-cri-oauth-access-token-${Environment}"
      Handler: uk.gov.di.ipv.core.retrievecrioauthaccesstoken.RetrieveCriOauthAccessTokenHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/retrieve-cri-oauth-access-token
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub "/${Environment}/core/credentialIssuers"
          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt UserIssuedCredentialsTable.Arn ] ]
          USER_ISSUED_CREDENTIALS_V2_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt UserIssuedCredentialsV2Table.Arn ] ]
          SIGNING_KEY_ID_PARAM: !Sub "/${Environment}/core/self/signingKeyId"
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub retrieve-cri-oauth-access-token-${Environment}
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserIssuedCredentialsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref UserIssuedCredentialsV2Table
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/credentialIssuers/*
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/credentialIssuers
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/self/*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:${Environment}/credential-issuers/*/api-key-*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: kmsSigningKeyPermission
              Effect: Allow
              Action:
                - 'kms:sign'
              Resource:
                - !ImportValue SigningKeyArn
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /journey/cri/access-token
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
        - AddProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
        - !Ref AWS::NoValue

  RetrieveCriOauthAccessTokenFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/retrieve-cri-oauth-access-token-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  RetrieveCriOauthAccessTokenFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref RetrieveCriOauthAccessTokenFunctionLogGroup

  BuildCriOauthRequestToBeRemovedFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "BuildCriOauthRequestToBeRemovedFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "build-cri-oauth-request-TO-BE-REMOVED-${Environment}"
      Handler: uk.gov.di.ipv.core.buildcrioauthrequest.BuildCriOauthRequestHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/build-cri-oauth-request
      Architectures:
        - arm64
      MemorySize: 3008
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub "/${Environment}/core/credentialIssuers"
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub build-cri-oauth-request-TO-BE-REMOVED-${Environment}
          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt UserIssuedCredentialsV2Table.Arn ] ]
          SIGNING_KEY_ID_PARAM: !Sub "/${Environment}/core/self/signingKeyId"
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UserIssuedCredentialsV2Table
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/self/*
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/credentialIssuers/*
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/credentialIssuers
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: kmsSigningKeyPermission
              Effect: Allow
              Action:
                - 'kms:sign'
              Resource:
                - !ImportValue SigningKeyArn
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /journey/cri/start/{criId}
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
          - !Ref AWS::NoValue

  BuildCriOauthRequestToBeRemovedFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/build-cri-oauth-request-TO-BE-REMOVED-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  BuildCriOauthRequestToBeRemovedFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref BuildCriOauthRequestToBeRemovedFunctionLogGroup

  BuildCriOauthRequestFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "BuildCriOauthRequestFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "build-cri-oauth-request-${Environment}"
      Handler: uk.gov.di.ipv.core.buildcrioauthrequest.BuildCriOauthRequestHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/build-cri-oauth-request
      Architectures:
        - arm64
      MemorySize: 3008
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub "/${Environment}/core/credentialIssuers"
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub build-cri-oauth-request-${Environment}
          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt UserIssuedCredentialsTable.Arn ] ]
          USER_ISSUED_CREDENTIALS_V2_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt UserIssuedCredentialsV2Table.Arn ] ]
          SIGNING_KEY_ID_PARAM: !Sub "/${Environment}/core/self/signingKeyId"
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UserIssuedCredentialsTable
        - DynamoDBReadPolicy:
            TableName: !Ref UserIssuedCredentialsV2Table
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/self/*
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/credentialIssuers/*
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/credentialIssuers
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: kmsSigningKeyPermission
              Effect: Allow
              Action:
                - 'kms:sign'
              Resource:
                - !ImportValue SigningKeyArn
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /journey/cri/build-oauth-request/{criId}
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
        - AddProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
        - !Ref AWS::NoValue

  BuildCriOauthRequestFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/build-cri-oauth-request-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  BuildCriOauthRequestFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref BuildCriOauthRequestFunctionLogGroup

  IPVCredentialIssuerErrorFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "IPVCredentialIssuerErrorFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "ipv-credential-issuer-error-${Environment}"
      Handler: uk.gov.di.ipv.core.credentialissuererror.CredentialIssuerErrorHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/credentialissuererror
      Architectures:
        - arm64
      MemorySize: 3008
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub credential-issuer-error-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/self/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /journey/cri/error
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
          - !Ref AWS::NoValue

  IPVCredentialIssuerErrorFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/ipv-credential-issuer-error-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  IPVCredentialIssuerErrorFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVCredentialIssuerErrorFunctionLogGroup

  IPVUserIdentityFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "IPVUserIdentityFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "ipv-user-identity-${Environment}"
      Handler: uk.gov.di.ipv.core.useridentity.UserIdentityHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/useridentity
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub user-identity-${Environment}
          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Select [1, !Split ['/', !GetAtt UserIssuedCredentialsV2Table.Arn]]
          IPV_SESSIONS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt SessionsTable.Arn ] ]
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UserIssuedCredentialsV2Table
        - DynamoDBWritePolicy:
            TableName: !Ref UserIssuedCredentialsV2Table
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/self/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCoreExternalAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCoreExternalAPI
            Path: /user-identity
            Method: GET
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
          - !Ref AWS::NoValue

  IPVUserIdentityFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/ipv-user-identity-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  IPVUserIdentityFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVUserIdentityFunctionLogGroup

  GetCredentialIssuerConfig:
    Type: AWS::Serverless::Function
    DependsOn:
      - "GetCredentialIssuerFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "get-credential-issuer-config-${Environment}"
      Handler: uk.gov.di.ipv.core.getcredentialissuerconfig.GetCredentialIssuerConfigHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/get-credential-issuer-config
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub get-credential-issuer-config-${Environment}
          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub "/${Environment}/core/credentialIssuers"
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/credentialIssuers/*
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/credentialIssuers
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /request-config
            Method: GET
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
          - !Ref AWS::NoValue

  GetCredentialIssuerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/get-credential-issuer-config-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  GetCredentialIssuerFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref GetCredentialIssuerFunctionLogGroup

  BuildDebugCredentialDataToBeRemovedFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "BuildDebugCredentialDataToBeRemovedFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "build-debug-credential-data-TO-BE-REMOVED-${Environment}"
      Handler: uk.gov.di.ipv.core.builddebugcredentialdata.BuildDebugCredentialDataHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/build-debug-credential-data
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub build-debug-credential-data-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt SessionsTable.Arn ] ]
          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Select [1, !Split ['/', !GetAtt UserIssuedCredentialsV2Table.Arn]]
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref UserIssuedCredentialsV2Table
        - DynamoDBWritePolicy:
            TableName: !Ref UserIssuedCredentialsV2Table
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/self/*
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /issued-credentials
            Method: GET
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
          - !Ref AWS::NoValue

  BuildDebugCredentialDataToBeRemovedFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/build-debug-credential-data-TO-BE-REMOVED-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  BuildDebugCredentialDataToBeRemovedFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref BuildDebugCredentialDataToBeRemovedFunctionLogGroup

  BuildDebugCredentialDataFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "BuildDebugCredentialDataFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "build-debug-credential-data-${Environment}"
      Handler: uk.gov.di.ipv.core.builddebugcredentialdata.BuildDebugCredentialDataHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/build-debug-credential-data
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub build-debug-credential-data-${Environment}
          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt UserIssuedCredentialsTable.Arn ] ]
          USER_ISSUED_CREDENTIALS_V2_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt UserIssuedCredentialsV2Table.Arn ] ]
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UserIssuedCredentialsTable
        - DynamoDBWritePolicy:
            TableName: !Ref UserIssuedCredentialsTable
        - DynamoDBReadPolicy:
            TableName: !Ref UserIssuedCredentialsV2Table
        - DynamoDBWritePolicy:
            TableName: !Ref UserIssuedCredentialsV2Table
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/self/*
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /debug-credential-data
            Method: GET
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
        - AddProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
        - !Ref AWS::NoValue

  BuildDebugCredentialDataFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/build-debug-credential-data-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  BuildDebugCredentialDataFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref BuildDebugCredentialDataFunctionLogGroup

  IPVProcessJourneyStepFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "IPVProcessJourneyStepFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "process-journey-step-${Environment}"
      Handler: uk.gov.di.ipv.core.processjourneystep.ProcessJourneyStepHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/process-journey-step
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub session-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          IPV_JOURNEY_CRI_START_URI: "/journey/cri/start/"
          IPV_JOURNEY_SESSION_END_URI: "/journey/session/end"
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/self/*
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /journey/{journeyStep}
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
          - !Ref AWS::NoValue

  IPVProcessJourneyStepFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/process-journey-step-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  IPVProcessJourneyStepFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVProcessJourneyStepFunctionLogGroup

  IPVValidateCriCheckFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "IPVValidateCriCheckFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "validate-cri-check-${Environment}"
      Handler: uk.gov.di.ipv.core.validatecricheck.ValidateCriCheckHandler::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/validatecricheck
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          ENVIRONMENT: !Ref Environment
          POWERTOOLS_SERVICE_NAME: !Sub validate-cri-check-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Ref UserIssuedCredentialsV2Table
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref UserIssuedCredentialsV2Table
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/self/*
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /journey/cri/validate/{criId}
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
          - AddProvisionedConcurrency
          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
          - !Ref AWS::NoValue

  IPVValidateCriCheckFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/validate-cri-check-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  IPVValidateCriCheckFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref IPVValidateCriCheckFunctionLogGroup

  EvaluateGpg45ScoresFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - EvaluateGpg45ScoresFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "evaluate-gpg45-scores-${Environment}"
      Handler: uk.gov.di.ipv.core.evaluategpg45scores::handleRequest
      Runtime: java11
      PackageType: Zip
      CodeUri: ../lambdas/evaluate-gpg45-scores
      Architectures:
        - arm64
      MemorySize: 2048
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          ENVIRONMENT: !Sub "${Environment}"
          POWERTOOLS_SERVICE_NAME: !Sub evaluate-gpg45-scores-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Ref UserIssuedCredentialsV2Table
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref UserIssuedCredentialsV2Table
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCorePrivateAPI
            Path: /journey/evaluate-gpg45-scores
            Method: POST
      AutoPublishAlias: live
      ProvisionedConcurrencyConfig:
        !If
        - AddProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]
        - !Ref AWS::NoValue

  EvaluateGpg45ScoresFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/aws/lambda/evaluate-gpg45-scores-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  EvaluateGpg45ScoresFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevelopment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prod"
      FilterPattern: ""
      LogGroupName: !Ref EvaluateGpg45ScoresFunctionLogGroup

  UserIssuedCredentialsV2Table:
    Type: AWS::DynamoDB::Table
    Properties:
      # checkov:skip=CKV_AWS_28: Point in time recovery is not necessary for this table.
      TableName: !Sub "user-issued-credentials-v2-${Environment}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "userId"
          AttributeType: "S"
        - AttributeName: "credentialIssuer"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "userId"
          KeyType: "HASH"
        - AttributeName: "credentialIssuer"
          KeyType: "RANGE"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      SSESpecification:
        # checkov:skip=CKV_AWS_119: Implement Customer Managed Keys in PYIC-1391
        SSEEnabled: true
        SSEType: KMS

  SessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      # checkov:skip=CKV_AWS_28: Point in time recovery is not necessary for this table.
      TableName: !Sub "sessions-${Environment}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "ipvSessionId"
          AttributeType: "S"
        - AttributeName: "authorizationCode"
          AttributeType: "S"
        - AttributeName: "accessToken"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ipvSessionId"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "authorizationCode"
          KeySchema:
            - AttributeName: "authorizationCode"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
        - IndexName: "accessToken"
          KeySchema:
            - AttributeName: "accessToken"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      SSESpecification:
        # checkov:skip=CKV_AWS_119: Implement Customer Managed Keys in PYIC-1391
        SSEEnabled: true
        SSEType: KMS

  ClientAuthJwtIdsTable:
    Type: AWS::DynamoDB::Table
    # checkov:skip=CKV_AWS_28: Point in time recovery is not necessary for this table.
    Properties:
      TableName: !Sub "client-auth-jwt-ids-${Environment}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "jwtId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "jwtId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      SSESpecification:
        # checkov:skip=CKV_AWS_119: Implement Customer Managed Keys in PYIC-1391
        SSEEnabled: true
        SSEType: KMS

  LoggingKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

Outputs:
  IPVCorePrivateAPIGatewayID:
    Description: Core Back Private API Gateway ID
    Export:
      Name: !Sub "${AWS::StackName}-IPVCorePrivateAPIGatewayID"
    Value: !Ref IPVCorePrivateAPI
  IPVCoreExternalAPIGatewayID:
    Description: Core Back External API Gateway ID
    Export:
      Name: !Sub "${AWS::StackName}-IPVCoreExternalAPIGatewayID"
    Value: !Ref IPVCoreExternalAPI
