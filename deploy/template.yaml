AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  This creates the necessary serverless components for IPV Core-Back.

Globals:
  Function:
    Timeout: 40
    SnapStart:
      ApplyOn: PublishedVersions
    Architectures:
      - arm64
    MemorySize: !If [IsPerformanceSensitive, 3072, 1024]
    Runtime: java21
    Environment:
      Variables:
        ENVIRONMENT: !Sub "${Environment}"
        APP_CONFIG_ID: !If
          - IsDevelopment
          - !Sub "core-${Environment}"
          - !Sub "core-back-${Environment}"
        APP_CONFIG_ENVIRONMENT_ID: !If
          - IsDevelopment
          - !Sub "core-${Environment}"
          - !Sub "core-back-${Environment}"
        APP_CONFIG_PROFILE_ID: !If
          - IsDevelopment
          - !Sub "core-${Environment}"
          - !Sub "core-back-${Environment}"
        DT_CONNECTION_BASE_URL: !If
          - UseDynatrace
          - !Sub
            - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}' # pragma: allowlist secret
            - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, dynatraceSecretArn ]
          - !Ref AWS::NoValue
        OTEL_INSTRUMENTATION_AWS_SDK_EXPERIMENTAL_USE_PROPAGATOR_FOR_MESSAGING: true
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
        POWERTOOLS_METRICS_NAMESPACE: !Sub CoreBackEmbeddedMetrics-${Environment}
        POWERTOOLS_TRACER_CAPTURE_RESPONSE: false
        POWERTOOLS_TRACER_CAPTURE_ERROR: false
        CONFIG_SERVICE_CACHE_DURATION_MINUTES: !If
          - IsPerformanceSensitive
          - 3
          - 0
        OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: delta
        OTEL_INSTRUMENTATION_COMMON_DEFAULT_ENABLED: false
        OTEL_INSTRUMENTATION_AWS_LAMBDA_ENABLED: true
        OTEL_INSTRUMENTATION_AWS_SDK_ENABLED: true
        OPENTELEMETRY_COLLECTOR_CONFIG_URI: '/var/task/collector.yaml'
        DT_CONNECTION_AUTH_TOKEN_OTLP: !If
          - UseDynatrace
          - !Sub
            - '{{resolve:secretsmanager:${SecretArn}:SecretString}}' # pragma: allowlist secret
            - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, dynatraceOtlpSecretArn ]
          - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    DeploymentPreference:
      Type: !Ref LambdaDeploymentPreference
      Role: !GetAtt CodeDeployServiceRole.Arn
    AutoPublishAlias: live

Parameters:
  Environment:
    Type: String
  VpcStackName:
    Description: >
      The name of the stack that defines the VPC in which this container will
      run.
    Type: String
  CodeSigningConfigArn:
    Type: String
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: "none"
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  LambdaDeploymentPreference:
    Description: "Specifies the configuration to enable gradual Lambda deployments."
    Type: String
    Default: "AllAtOnce"
    AllowedValues:
      - AllAtOnce
      - Canary10Percent5Minutes
      - Canary10Percent10Minutes
      - Canary10Percent15Minutes
      - Canary10Percent30Minutes
      - Linear10PercentEvery10Minutes
      - Linear10PercentEvery1Minute
      - Linear10PercentEvery2Minutes
      - Linear10PercentEvery3Minutes
      - LambdaCanary50Percent5Minutes
  StepFunctionDeploymentPreference:
    Description: "Specifies the configuration to enable gradual StepFunction deployment."
    Type: String
    Default: "ALL_AT_ONCE"
    AllowedValues:
      - ALL_AT_ONCE
      - CANARY
      - LINEAR

Conditions:
  IsDevelopment: !Or
    - !Equals [ !Ref AWS::AccountId, "130355686670" ]
    - !Equals [ !Ref AWS::AccountId, "175872367215" ]
  IsDev01: !Equals [ !Ref AWS::AccountId, "130355686670" ]
  IsNotDevelopment: !Not [ !Condition IsDevelopment ]
  IsBuild: !Equals [ !Ref Environment, "build" ]
  IsDevPerf: !Equals [ !Ref Environment, "dev-perf" ]
  IsDevOrBuild: !Or
    - !Condition IsDevelopment
    - !Condition IsBuild
  IsStaging: !Equals [ !Ref Environment, "staging" ]
  IsDevOrBuildOrStaging: !Or
    - !Condition IsDevOrBuild
    - !Condition IsStaging
  IsProduction: !Equals [ !Ref Environment, "production" ]
  IsStagingIntProd: !Or
    - !Equals [ !Ref Environment, staging ]
    - !Equals [ !Ref Environment, integration ]
    - !Equals [ !Ref Environment, production ]
  IsBuildStagingProd: !Or
    - !Equals [ !Ref Environment, build ]
    - !Equals [ !Ref Environment, staging ]
    - !Equals [ !Ref Environment, production ]
  IsBuildStagingIntProd: !Or
    - !Equals [ !Ref Environment, build]
    - !Equals [ !Ref Environment, staging]
    - !Equals [ !Ref Environment, integration]
    - !Equals [ !Ref Environment, production]
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"
  IsTestApiEnv: !Or
    - !Condition IsDevelopment
    - !Equals [ !Ref Environment, build ]
  UseCanaryDeploymentAlarms: !Or
    - !Not [ !Equals [ !Ref StepFunctionDeploymentPreference, ALL_AT_ONCE ]]
    - !Not [ !Equals [ !Ref LambdaDeploymentPreference, AllAtOnce ]]
  IsPerformanceSensitive: !Or
    - !Not [ !Condition IsDevelopment ]
    - !Condition IsDevPerf
  UseDynatrace: !Condition IsPerformanceSensitive

# The AWS Account Id is used in the following mapping section because we have
# multiple developer environments and it is undesirable to have to keep this
# mapping up to date with each developer environment.
Mappings:
  EnvironmentConfiguration:
    "130355686670": # core dev01
      environment: dev
      journeyEngineStepFunctionLogLevel: "ALL"
      pgw500ErrorLimit: 2
      egw500ErrorLimit: 2
      sharedStubAsyncCriResponseQueueArn: "arn:aws:sqs:eu-west-2:388905755587:stubQueue_criResponseQueue"
      sharedStubAsyncCriResponseQueueKmsKeyArn: "arn:aws:kms:eu-west-2:388905755587:key/60feaacf-271c-4cba-81d3-17df3952e605"
      f2fAsyncCriResponseQueueArn: "not-used"
      f2fAsyncCriResponseQueueKmsKeyArn: "not-used"
      dcmawAsyncCriResponseQueueArn: "not-used"
      dcmawAsyncCriResponseQueueKmsKeyArn: "not-used"
      # Should be at most 1/6 of the source queue visibility timeout.
      # See https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-queueconfig
      asyncCriLambdaTimeout: 30
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      opentelemetryCollectorLayerArn: "not-used"
      opentelemetryJavaWrapperLayerArn: "not-used"
      dynatraceOtlpSecretArn: "not-used" # pragma: allowlist secret
      didStoredIdentityId: "did:web:api.01.dev.identity.account.gov.uk:.well-known/stored-identity"
    "175872367215": # Core dev02
      environment: dev
      journeyEngineStepFunctionLogLevel: "ALL"
      pgw500ErrorLimit: 2
      egw500ErrorLimit: 2
      sharedStubAsyncCriResponseQueueArn: "arn:aws:sqs:eu-west-2:388905755587:stubQueue_criResponseQueue"
      sharedStubAsyncCriResponseQueueKmsKeyArn: "arn:aws:kms:eu-west-2:388905755587:key/60feaacf-271c-4cba-81d3-17df3952e605"
      f2fAsyncCriResponseQueueArn: "not-used"
      f2fAsyncCriResponseQueueKmsKeyArn: "not-used"
      dcmawAsyncCriResponseQueueArn: "not-used"
      dcmawAsyncCriResponseQueueKmsKeyArn: "not-used"
      asyncCriLambdaTimeout: 30
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      opentelemetryCollectorLayerArn: arn:aws:lambda:eu-west-2:175872367215:layer:opentelemetry-collector-arm64-0_16_0:1
      opentelemetryJavaWrapperLayerArn: arn:aws:lambda:eu-west-2:175872367215:layer:opentelemetry-javawrapper-0_14_0:1
      dynatraceOtlpSecretArn: arn:aws:secretsmanager:eu-west-2:175872367215:secret:dynatrace_api_token_otlp # pragma: allowlist secret
      didStoredIdentityId: "did:web:api.02.dev.identity.account.gov.uk:.well-known/stored-identity"
    "457601271792": # Build
      environment: build
      journeyEngineStepFunctionLogLevel: "ALL"
      pgw500ErrorLimit: 2
      egw500ErrorLimit: 2
      sharedStubAsyncCriResponseQueueArn: "arn:aws:sqs:eu-west-2:388905755587:stubQueue_criResponseQueue_build"
      sharedStubAsyncCriResponseQueueKmsKeyArn: "arn:aws:kms:eu-west-2:388905755587:key/60feaacf-271c-4cba-81d3-17df3952e605"
      f2fAsyncCriResponseQueueArn: "not-used"
      f2fAsyncCriResponseQueueKmsKeyArn: "not-used"
      dcmawAsyncCriResponseQueueArn: "not-used"
      dcmawAsyncCriResponseQueueKmsKeyArn: "not-used"
      asyncCriLambdaTimeout: 30
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      opentelemetryCollectorLayerArn: arn:aws:lambda:eu-west-2:457601271792:layer:opentelemetry-collector-arm64-0_16_0:1
      opentelemetryJavaWrapperLayerArn: arn:aws:lambda:eu-west-2:457601271792:layer:opentelemetry-javawrapper-0_14_0:1
      dynatraceOtlpSecretArn: arn:aws:secretsmanager:eu-west-2:457601271792:secret:dynatrace_api_token_otlp # pragma: allowlist secret
      didStoredIdentityId: "did:web:api.identity.build.account.gov.uk:.well-known/stored-identity"
    "335257547869": # Staging
      environment: staging
      journeyEngineStepFunctionLogLevel: "ALL"
      pgw500ErrorLimit: 2
      egw500ErrorLimit: 2
      sharedStubAsyncCriResponseQueueArn: "arn:aws:sqs:eu-west-2:388905755587:stubQueue_criResponseQueue_staging"
      sharedStubAsyncCriResponseQueueKmsKeyArn: "arn:aws:kms:eu-west-2:388905755587:key/60feaacf-271c-4cba-81d3-17df3952e605"
      f2fAsyncCriResponseQueueArn: "arn:aws:sqs:eu-west-2:869230006441:f2f-cri-api-IPVCoreSQSQueue-IE674r63Z764"
      f2fAsyncCriResponseQueueKmsKeyArn: "arn:aws:kms:eu-west-2:869230006441:key/09405695-4244-406a-b6bd-17381a49bf27"
      dcmawAsyncCriResponseQueueArn: "arn:aws:sqs:eu-west-2:730335288219:mob-async-backend-ipv-core-outbound"
      dcmawAsyncCriResponseQueueKmsKeyArn: "arn:aws:kms:eu-west-2:730335288219:key/d2326cb1-e2fc-4a81-98dc-3b6101bdb01f"
      asyncCriLambdaTimeout: 30
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      opentelemetryCollectorLayerArn: arn:aws:lambda:eu-west-2:335257547869:layer:opentelemetry-collector-arm64-0_16_0:1
      opentelemetryJavaWrapperLayerArn: arn:aws:lambda:eu-west-2:335257547869:layer:opentelemetry-javawrapper-0_14_0:1
      dynatraceOtlpSecretArn: arn:aws:secretsmanager:eu-west-2:335257547869:secret:/staging/core/dynatrace/openTelemetryApiKey-T2LX5E # pragma: allowlist secret
      didStoredIdentityId: "did:web:api.identity.staging.account.gov.uk:.well-known/stored-identity"
    "991138514218": # Integration
      environment: integration
      journeyEngineStepFunctionLogLevel: "OFF"
      pgw500ErrorLimit: 2
      egw500ErrorLimit: 2
      sharedStubAsyncCriResponseQueueArn: "not-used"
      sharedStubAsyncCriResponseQueueKmsKeyArn: "not-used"
      f2fAsyncCriResponseQueueArn: "arn:aws:sqs:eu-west-2:766319219145:f2f-cri-api-IPVCoreSQSQueue-kuAgEry3qYXT"
      f2fAsyncCriResponseQueueKmsKeyArn: "arn:aws:kms:eu-west-2:766319219145:key/98b3663f-5f14-495f-9d38-ec7effb69fe5"
      dcmawAsyncCriResponseQueueArn: "arn:aws:sqs:eu-west-2:992382392501:mob-async-backend-ipv-core-outbound"
      dcmawAsyncCriResponseQueueKmsKeyArn: "arn:aws:kms:eu-west-2:992382392501:key/c3d600cd-bde4-4595-a5e2-991c46802cbb"
      asyncCriLambdaTimeout: 30
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      opentelemetryCollectorLayerArn: arn:aws:lambda:eu-west-2:991138514218:layer:opentelemetry-collector-arm64-0_16_0:1
      opentelemetryJavaWrapperLayerArn: arn:aws:lambda:eu-west-2:991138514218:layer:opentelemetry-javawrapper-0_14_0:1
      dynatraceOtlpSecretArn: arn:aws:secretsmanager:eu-west-2:991138514218:secret:/integration/core/dynatrace/openTelemetryApiKey-ACu0S2 # pragma: allowlist secret
      didStoredIdentityId: "did:web:api.identity.integration.account.gov.uk:.well-known/stored-identity"
    "075701497069": # Production
      environment: production
      journeyEngineStepFunctionLogLevel: "OFF"
      pgw500ErrorLimit: 20
      egw500ErrorLimit: 2
      sharedStubAsyncCriResponseQueueArn: "not-used"
      sharedStubAsyncCriResponseQueueKmsKeyArn: "not-used"
      f2fAsyncCriResponseQueueArn: "arn:aws:sqs:eu-west-2:377086294028:f2f-cri-api-IPVCoreSQSQueue-CPbnPGKq0SL7"
      f2fAsyncCriResponseQueueKmsKeyArn: "arn:aws:kms:eu-west-2:377086294028:key/db743f51-fe65-43f8-a44e-4a124f8a3ee6"
      dcmawAsyncCriResponseQueueArn: "arn:aws:sqs:eu-west-2:339712924890:mob-async-backend-ipv-core-outbound"
      dcmawAsyncCriResponseQueueKmsKeyArn: "arn:aws:kms:eu-west-2:339712924890:key/24e580d2-ea02-4e41-986b-1a53242480a5"
      asyncCriLambdaTimeout: 30
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables
      opentelemetryCollectorLayerArn: arn:aws:lambda:eu-west-2:075701497069:layer:opentelemetry-collector-arm64-0_16_0:1
      opentelemetryJavaWrapperLayerArn: arn:aws:lambda:eu-west-2:075701497069:layer:opentelemetry-javawrapper-0_14_0:1
      dynatraceOtlpSecretArn: arn:aws:secretsmanager:eu-west-2:075701497069:secret:/production/core/dynatrace/openTelemetryApiKey-xj1sKg # pragma: allowlist secret
      didStoredIdentityId: "did:web:api.identity.account.gov.uk:.well-known/stored-identity"
  SecurityGroups:
    PrefixListIds:
      dynamodb: "pl-b3a742da"
      s3: "pl-7ca54015"
  Constants:
    Urls:
      pagerDutyRunbook: "https://team-manual.account.gov.uk/teams/IPV-Core-team/Supporting-IPV-Core/pager-duty-runbooks/"

Resources:
  # ssl cert
  DevSSLCert:
    Type: AWS::CertificateManager::Certificate
    Condition: IsDevelopment
    Properties:
      DomainName: !If
        - IsDev01
        - !Sub "api-${Environment}.01.dev.identity.account.gov.uk"
        - !Sub "api-${Environment}.02.dev.identity.account.gov.uk"
      DomainValidationOptions:
        - DomainName: !If
            - IsDev01
            - !Sub "api-${Environment}.01.dev.identity.account.gov.uk"
            - !Sub "api-${Environment}.02.dev.identity.account.gov.uk"
          HostedZoneId: !If
            - IsDev01
            - !ImportValue Dev01IdentityHostedZoneId
            - !ImportValue Dev02IdentityHostedZoneId
      ValidationMethod: DNS

  # dns rcord
  DevDNSRecord:
    Type: AWS::Route53::RecordSet
    Condition: IsDevelopment
    Properties:
      Type: A
      Name: !If
        - IsDev01
        - !Sub "api-${Environment}.01.dev.identity.account.gov.uk"
        - !Sub "api-${Environment}.02.dev.identity.account.gov.uk"
      HostedZoneId: !If
        - IsDev01
        - !ImportValue Dev01IdentityHostedZoneId
        - !ImportValue Dev02IdentityHostedZoneId
      AliasTarget:
        DNSName: !GetAtt DevApiDomain.RegionalDomainName
        HostedZoneId: !GetAtt DevApiDomain.RegionalHostedZoneId

  # api domain entries / mapping
  DevApiDomain:
    Type: AWS::ApiGatewayV2::DomainName
    Condition: IsDevelopment
    Properties:
      DomainName: !If
        - IsDev01
        - !Sub "api-${Environment}.01.dev.identity.account.gov.uk"
        - !Sub "api-${Environment}.02.dev.identity.account.gov.uk"
      DomainNameConfigurations:
        - CertificateArn: !Ref DevSSLCert
          EndpointType: REGIONAL
          SecurityPolicy: TLS_1_2

  DevApiMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Condition: IsDevelopment
    Properties:
      DomainName: !If
        - IsDev01
        - !Sub "api-${Environment}.01.dev.identity.account.gov.uk"
        - !Sub "api-${Environment}.02.dev.identity.account.gov.uk"
      ApiId: !Ref IPVCoreExternalAPI
      Stage: !Ref IPVCoreExternalAPI.Stage
    DependsOn:
      - DevApiDomain

  LambdaSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: >-
        Core Back Lambda Security Group outbound permissions ruleset
      SecurityGroupEgress:
        - DestinationPrefixListId: !FindInMap [SecurityGroups, PrefixListIds, dynamodb]
          Description: Allow outbound traffic to dynamodb vpc endpoint
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - DestinationPrefixListId: !FindInMap [SecurityGroups, PrefixListIds, s3]
          Description: Allow outbound traffic to s3 vpc endpoint
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - DestinationSecurityGroupId:
            Fn::ImportValue:  !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId
          Description: Allow outbound HTTPS traffic to AWS Services vpc endpoint security group
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          Description: Allow outbound HTTPS traffic to Internet - Network Firewall will allow only to CRIs
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      SecurityGroupIngress:
        - CidrIp:
            Fn::ImportValue: !Sub ${VpcStackName}-VpcCidr
          Description: Allow inbound traffic from vpc cidr to port 443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Fn::ImportValue: !Sub ${VpcStackName}-VpcId

  IPVCorePrivateAPI:
    Type: AWS::Serverless::Api
    Properties:
      # checkov:skip=CKV_AWS_120: We are not implementing API Gateway caching at the time.
      Name: !Sub IPV Core Private API Gateway ${Environment}
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          MetricsEnabled: true
      EndpointConfiguration:
        Type: PRIVATE
        VPCEndpointIds:
          - Fn::ImportValue: !Sub "${VpcStackName}-ExecuteApiGatewayEndpointId"
      DefinitionBody:
        openapi: "3.0.3" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /foo:
            bar: baz
        Fn::Transform:
          Name: "AWS::Include"
          Parameters:
            Location: "../openAPI/core-back-internal.yaml"
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Action: 'execute-api:Invoke'
              Effect: Allow
              Principal: '*'
              Resource:
                - 'execute-api:/*'
      StageName: !Sub ${Environment}
      Tags:
        FMSRegionalPolicy: "false"
        CustomPolicy: "true"
      TracingEnabled: true
      AccessLogSetting:
        DestinationArn: !GetAtt IPVCorePrivateAPILogGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }

  IPVCorePrivateAPILogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      LogGroupName: !If
        - IsDevelopment
        - !Sub /aws/vendedlogs/apigateway/${AWS::StackName}-CoreBackPrivate-API-GW-AccessLogs
        - !Sub /aws/apigateway/${AWS::StackName}-CoreBackPrivate-API-GW-AccessLogs
      RetentionInDays: 30

  IPVCorePrivateAPILogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref IPVCorePrivateAPILogGroup

  IPVCoreInternalTestingApi:
    Type: AWS::Serverless::Api
    Condition: IsTestApiEnv
    Properties:
      # checkov:skip=CKV_AWS_120: We are not implementing API Gateway caching at the time.
      Name: !Sub IPV Core Private Testing API Gateway ${Environment}
      Description: A parallel to the private internal API but opened up for testing
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          MetricsEnabled: true
      EndpointConfiguration:
        Type: REGIONAL
      DefinitionBody:
        openapi: "3.0.3" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /foo:
            bar:
              baz: thing # workaround to get `sam validate` to work
        Fn::Transform:
          Name: "AWS::Include"
          Parameters:
            Location: "../openAPI/core-back-internal.yaml"
      ApiKeySourceType: HEADER # pragma: allowlist secret
      Auth:
        ApiKeyRequired: true # pragma: allowlist secret
        ResourcePolicy:
          CustomStatements:
            - Action: 'execute-api:Invoke'
              Effect: Allow
              Principal: '*'
              Resource:
                - 'execute-api:/*'
      StageName: !Sub ${Environment}
      TracingEnabled: true
      Tags:
        FMSRegionalPolicy: false
        CustomPolicy: true
      AccessLogSetting:
        DestinationArn: !GetAtt IPVCorePrivateAPILogGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }

  IPVCoreInternalTestingApiKey:
    Type: AWS::ApiGateway::ApiKey
    Condition: IsTestApiEnv
    Properties:
      Enabled: true
      Value: !Sub
        - "{{resolve:secretsmanager:CoreBackInternalTestingApiKey:SecretString}}${env}" # pragma: allowlist secret
        - env: !If
            - IsDevelopment
            - !Sub "-${Environment}"
            - ""

  IPVCoreInternalTestingApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Condition: IsTestApiEnv
    Properties:
      UsagePlanName: Internal testing API usage plan
      ApiStages:
        - ApiId: !Ref IPVCoreInternalTestingApi
          Stage: !Ref IPVCoreInternalTestingApi.Stage

  IPVCoreInternalTestingApiUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Condition: IsTestApiEnv
    Properties:
      KeyId: !Ref IPVCoreInternalTestingApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref IPVCoreInternalTestingApiUsagePlan

  # ssl cert
  IPVCoreInternalTestingApiSSLCert:
    Type: AWS::CertificateManager::Certificate
    Condition: IsTestApiEnv
    Properties:
      DomainName: !If
        - IsDevelopment
        - !If
          - IsDev01
          - !Sub "internal-test-api-${Environment}.01.dev.identity.account.gov.uk"
          - !Sub "internal-test-api-${Environment}.02.dev.identity.account.gov.uk"
        - !Sub "internal-test-api.identity.${Environment}.account.gov.uk"
      DomainValidationOptions:
        - DomainName: !If
          - IsDevelopment
          - !If
            - IsDev01
            - !Sub "internal-test-api-${Environment}.01.dev.identity.account.gov.uk"
            - !Sub "internal-test-api-${Environment}.02.dev.identity.account.gov.uk"
          - !Sub "internal-test-api.identity.${Environment}.account.gov.uk"
          HostedZoneId: !If
            - IsDevelopment
            - !If
              - IsDev01
              - !ImportValue Dev01IdentityHostedZoneId
              - !ImportValue Dev02IdentityHostedZoneId
            - !ImportValue PublicHostedZoneId
      ValidationMethod: DNS

  # api domain entries / mapping
  IPVCoreInternalTestingApiDomain:
    Type: AWS::ApiGatewayV2::DomainName
    # checkov:skip=CKV_AWS_120: doing it later
    Condition: IsTestApiEnv
    Properties:
      DomainName: !If
        - IsDevelopment
        - !If
          - IsDev01
          - !Sub "internal-test-api-${Environment}.01.dev.identity.account.gov.uk"
          - !Sub "internal-test-api-${Environment}.02.dev.identity.account.gov.uk"
        - !Sub "internal-test-api.identity.${Environment}.account.gov.uk"
      DomainNameConfigurations:
        - CertificateArn: !Ref IPVCoreInternalTestingApiSSLCert
          EndpointType: REGIONAL
          SecurityPolicy: TLS_1_2

  IPVCoreInternalTestingApiMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Condition: IsTestApiEnv
    Properties:
      DomainName: !If
        - IsDevelopment
        - !If
          - IsDev01
          - !Sub "internal-test-api-${Environment}.01.dev.identity.account.gov.uk"
          - !Sub "internal-test-api-${Environment}.02.dev.identity.account.gov.uk"
        - !Sub "internal-test-api.identity.${Environment}.account.gov.uk"
      ApiId: !Ref IPVCoreInternalTestingApi
      Stage: !Ref IPVCoreInternalTestingApi.Stage
    DependsOn:
      - IPVCoreInternalTestingApiDomain

  # dns record
  IPVCoreInternalTestingApiRecord:
    Type: AWS::Route53::RecordSet
    Condition: IsTestApiEnv
    Properties:
      Type: A
      Name: !If
        - IsDevelopment
        - !If
          - IsDev01
          - !Sub "internal-test-api-${Environment}.01.dev.identity.account.gov.uk"
          - !Sub "internal-test-api-${Environment}.02.dev.identity.account.gov.uk"
        - !Sub "internal-test-api.identity.${Environment}.account.gov.uk"
      HostedZoneId: !If
        - IsDevelopment
        - !If
          - IsDev01
          - !ImportValue Dev01IdentityHostedZoneId
          - !ImportValue Dev02IdentityHostedZoneId
        - !ImportValue PublicHostedZoneId
      AliasTarget:
        DNSName: !GetAtt IPVCoreInternalTestingApiDomain.RegionalDomainName
        HostedZoneId: !GetAtt IPVCoreInternalTestingApiDomain.RegionalHostedZoneId

  IPVCoreInternalTestingApiLogGroup:
    Condition: IsTestApiEnv
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      LogGroupName: !Sub /aws/apigateway/internal-testing-api-access-logs-${Environment}
      RetentionInDays: 30

  IPVCoreExternalAPI:
    Type: AWS::Serverless::Api
    DependsOn:
      - ExternalApiGatewayS3Role
    Properties:
      # checkov:skip=CKV_AWS_120: We are not implementing API Gateway caching at the time.
      Name: !Sub IPV Core External API Gateway ${Environment}
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          MetricsEnabled: true
      StageName: !Sub ${Environment}
      TracingEnabled: true
      DefinitionBody:
        'Fn::Transform':
          Name: "AWS::Include"
          Parameters:
            Location: "../openAPI/core-back-external.yaml"
      Tags:
        FMSRegionalPolicy: "false"
        CustomPolicy: "true"
      AccessLogSetting:
        DestinationArn: !GetAtt IPVCoreExternalAPILogGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }

  IPVCoreExternalAPILogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      LogGroupName: !If
        - IsDevelopment
        - !Sub /aws/vendedlogs/apigateway/${AWS::StackName}-CoreBackExternal-API-GW-AccessLogs
        - !Sub /aws/apigateway/${AWS::StackName}-CoreBackExternal-API-GW-AccessLogs
      RetentionInDays: 30

  IPVCoreExternalAPILogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref IPVCoreExternalAPILogGroup

  ExternalApiGatewayS3Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: AccessJwksS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                Resource:
                  - !Sub
                    - "arn:aws:s3:::ipv-core-well-known-jwks-${env}/well-known.json"
                    - env: !If
                        - IsDevelopment
                        - !If
                          - IsDev01
                          - dev01
                          - dev02
                        - !Ref Environment
                  - !Sub
                    - "arn:aws:s3:::ipv-core-well-known-jwks-${env}/well-known-v2.json"
                    - env: !If
                        - IsDevelopment
                        - !If
                          - IsDev01
                          - dev01
                          - dev02
                        - !Ref Environment
                  - !Sub
                    - "arn:aws:s3:::ipv-core-well-known-jwks-${env}/well-known-v3.json"
                    - env: !If
                        - IsDevelopment
                        - !If
                          - IsDev01
                          - dev01
                          - dev02
                        - !Ref Environment
                  - !Sub
                    - "arn:aws:s3:::ipv-core-well-known-jwks-${env}/well-known-v4.json"
                    - env: !If
                        - IsDevelopment
                        - !If
                          - IsDev01
                          - dev01
                          - dev02
                        - !Ref Environment
        - PolicyName: AccessDidS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                Resource:
                  - !Sub
                    - "arn:aws:s3:::ipv-core-well-known-did-${env}/well-known.json"
                    - env: !If
                        - IsDevelopment
                        - !If
                          - IsDev01
                          - dev01
                          - dev02
                        - !Ref Environment
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  ManualF2fPendingResetFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "ManualF2fPendingResetFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "manual-f2f-pending-reset-${Environment}"
      Handler: uk.gov.di.ipv.core.manualf2fpendingreset.ManualF2fPendingResetHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/manual-f2f-pending-reset
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub manual-f2f-pending-reset-${Environment}
          CRI_RESPONSE_TABLE_NAME: !Ref CRIResponseTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: {}
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
            - Sid: AllowGetDeleteCriResponseDynamoDbTable
              Effect: Allow
              Action:
                - 'dynamodb:GetItem'
                - 'dynamodb:DeleteItem'
              Resource:
                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/cri-response-${Environment}
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      AutoPublishAlias: live

  ManualF2fPendingResetFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/manual-f2f-pending-reset-${Environment}"

  ManualF2fPendingResetFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref ManualF2fPendingResetFunctionLogGroup

  ManualF2fPendingResetFunctionManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: IsBuildStagingProd
    Properties:
      ManagedPolicyName: ManualF2fPendingResetManagedPolicy
      Description: Allows invoking the ManualF2f Lambda
      Path: /runbooks/
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
              - lambda:GetFunction
            Resource:
              - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:manual-f2f-pending-reset-${Environment}

  ManualF2fPendingResetFunctionInvokeRole:
    Type: AWS::IAM::Role
    Condition: IsBuildStagingProd
    Properties:
      RoleName: !Sub ${AWS::StackName}-RunbookF2fResetRole
      Description: "This role allows approved support team to perform pending F2F reset"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: "sts:AssumeRole"
            Condition:
              ArnLike:
                aws:PrincipalARN:
                  !Sub arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/*/AWSReservedSSO_ApprovedServiceSupport*
      ManagedPolicyArns:
        - !Ref ManualF2fPendingResetFunctionManagedPolicy
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      MaxSessionDuration: 43200
      Path: /runbooks/

  IPVCoreAnalyticsAPI:
    Type: AWS::Serverless::Api
    DependsOn:
      - FetchJourneyTransitionsFunction
      - FetchSystemSettingsFunction
    Properties:
      # checkov:skip=CKV_AWS_120: We are not implementing API Gateway caching at the time.
      Name: !Sub IPV Core Analytics API Gateway ${Environment}
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          MetricsEnabled: true
      StageName: !Sub "${Environment}-analytics"
      TracingEnabled: true
      DefinitionBody:
        'Fn::Transform':
          Name: "AWS::Include"
          Parameters:
            Location: "../openAPI/core-back-analytics.yaml"
      Tags:
        FMSRegionalPolicy: "false"
        CustomPolicy: "true"
      AccessLogSetting:
        DestinationArn: !GetAtt IPVCoreAnalyticsAPILogGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip":"$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path":"$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLatency":"$context.responseLatency",
          "responseLength":"$context.responseLength"
          }

  IPVCoreAnalyticsAPILogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      LogGroupName: !If
        - IsDevelopment
        - !Sub /aws/vendedlogs/apigateway/${AWS::StackName}-CoreBackAnalytics-API-GW-AccessLogs
        - !Sub /aws/apigateway/${AWS::StackName}-CoreBackAnalytics-API-GW-AccessLogs
      RetentionInDays: 30

  IPVCoreAnalyticsAPILogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref IPVCoreAnalyticsAPILogGroup

  IPVCoreAnalyticsAPIKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: !Sub IPVCoreAnalyticsAPIKey-${Environment}
      Enabled: true

  IPVCoreAnalyticsDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref IPVCoreAnalyticsAPI
      StageName: !Ref IPVCoreAnalyticsAPI.Stage

  IPVCoreAnalyticsUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn: IPVCoreAnalyticsDeployment
    Properties:
      UsagePlanName: !Sub IPVCoreAnalyticsUsagePlan-${Environment}
      ApiStages:
        - ApiId: !Ref IPVCoreAnalyticsAPI
          Stage: !Ref IPVCoreAnalyticsAPI.Stage
      Throttle:
        RateLimit: 10
        BurstLimit: 2

  IPVCoreAnalyticsUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref IPVCoreAnalyticsAPIKey
      KeyType: API_KEY
      UsagePlanId: !Ref IPVCoreAnalyticsUsagePlan

  IPVCoreAnalyticsSSLCert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !If
        - IsDevelopment
        - !If
          - IsDev01
          - !Sub "analytics-api-${Environment}.01.dev.identity.account.gov.uk"
          - !Sub "analytics-api-${Environment}.02.dev.identity.account.gov.uk"
        - !If
          - IsProduction
          - "analytics-api.identity.account.gov.uk"
          - !Sub "analytics-api.identity.${Environment}.account.gov.uk"
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !If
          - IsDevelopment
          - !If
            - IsDev01
            - !Sub "analytics-api-${Environment}.01.dev.identity.account.gov.uk"
            - !Sub "analytics-api-${Environment}.02.dev.identity.account.gov.uk"
          - !If
            - IsProduction
            - "analytics-api.identity.account.gov.uk"
            - !Sub "analytics-api.identity.${Environment}.account.gov.uk"
          HostedZoneId: !If
            - IsDevelopment
            - !If
              - IsDev01
              - !ImportValue Dev01IdentityHostedZoneId
              - !ImportValue Dev02IdentityHostedZoneId
            - !ImportValue PublicHostedZoneId
      Tags:
        - Key: Name
          Value: !Sub "Certificate for analytics-api-${Environment}"
      CertificateTransparencyLoggingPreference: ENABLED

  IPVCoreAnalyticsDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !If
        - IsDevelopment
        - !If
          - IsDev01
          - !Sub "analytics-api-${Environment}.01.dev.identity.account.gov.uk"
          - !Sub "analytics-api-${Environment}.02.dev.identity.account.gov.uk"
        - !If
          - IsProduction
          - "analytics-api.identity.account.gov.uk"
          - !Sub "analytics-api.identity.${Environment}.account.gov.uk"
      EndpointConfiguration:
        Types:
          - REGIONAL
      RegionalCertificateArn: !Ref IPVCoreAnalyticsSSLCert

  IPVCoreAnalyticsBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: IPVCoreAnalyticsDeployment
    Properties:
      DomainName: !Ref IPVCoreAnalyticsDomain
      RestApiId: !Ref IPVCoreAnalyticsAPI
      Stage: !Ref IPVCoreAnalyticsAPI.Stage
      BasePath: ""

  IPVCoreAnalyticsDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: A
      Name: !Ref IPVCoreAnalyticsDomain
      HostedZoneId: !If
        - IsDevelopment
        - !If
          - IsDev01
          - !ImportValue Dev01IdentityHostedZoneId
          - !ImportValue Dev02IdentityHostedZoneId
        - !ImportValue PublicHostedZoneId
      AliasTarget:
        DNSName: !GetAtt IPVCoreAnalyticsDomain.RegionalDomainName
        HostedZoneId: !GetAtt IPVCoreAnalyticsDomain.RegionalHostedZoneId

  IssueClientAccessTokenFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "IssueClientAccessTokenFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "issue-client-access-token-${Environment}"
      Handler: uk.gov.di.ipv.core.issueclientaccesstoken.IssueClientAccessTokenHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/issue-client-access-token
      Tracing: Active
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref IssueClientAccessTokenFunctionErrorCanaryAlarm, !Ref IssueClientAccessTokenFunction5xxErrorCanaryAlarm]
          - [!Ref AWS::NoValue]
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub issue-client-access-token-${Environment}
          CLIENT_AUTH_JWT_IDS_TABLE_NAME: !Ref ClientAuthJwtIdsTable
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-proxy-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: {}
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ClientAuthJwtIdsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
      Events:
        IPVCoreExternalAPI:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCoreExternalAPI
            Path: /token
            Method: POST
      AutoPublishAlias: live

  IssueClientAccessTokenFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/issue-client-access-token-${Environment}"

  IssueClientAccessTokenFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref IssueClientAccessTokenFunctionLogGroup

  BuildClientOauthResponseFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "BuildClientOauthResponseFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "build-client-oauth-response-${Environment}"
      Handler: uk.gov.di.ipv.core.buildclientoauthresponse.BuildClientOauthResponseHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/build-client-oauth-response
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub build-client-oauth-response-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: {}
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      AutoPublishAlias: live

  BuildClientOauthResponseFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/build-client-oauth-response-${Environment}"

  BuildClientOauthResponseFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref BuildClientOauthResponseFunctionLogGroup

  InitialiseIpvSessionFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "InitialiseIpvSessionFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "initialise-ipv-session-${Environment}"
      Handler: uk.gov.di.ipv.core.initialiseipvsession.InitialiseIpvSessionHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/initialise-ipv-session
      Tracing: Active
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref InitialiseIpvSessionFunctionErrorCanaryAlarm, !Ref InitialiseIpvSessionFunction5xxErrorCanaryAlarm]
          - [!Ref AWS::NoValue]
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub initialise-ipv-session-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-proxy-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: {}
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/evcs/apiKey-*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: jarKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCorePrivateAPI
            Path: /session/initialise
            Method: POST
      AutoPublishAlias: live

  InitialiseIpvSessionFunctionTestingApiPermission:
    Type: AWS::Lambda::Permission
    Condition: IsTestApiEnv
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref InitialiseIpvSessionFunction.Alias
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${IPVCoreInternalTestingApi}/*/POST/session/initialise"

  InitialiseIpvSessionFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/initialise-ipv-session-${Environment}"

  InitialiseIpvSessionFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref InitialiseIpvSessionFunctionLogGroup

  BuildCriOauthRequestFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "BuildCriOauthRequestFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "build-cri-oauth-request-${Environment}"
      Handler: uk.gov.di.ipv.core.buildcrioauthrequest.BuildCriOauthRequestHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/build-cri-oauth-request
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub build-cri-oauth-request-${Environment}
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          CRI_OAUTH_SESSIONS_TABLE_NAME: !Ref CriOAuthSessionsTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          SESSION_CREDENTIALS_TABLE_NAME: !Ref SessionCredentialsTable
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: {}
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBReadPolicy:
            TableName: !Ref SessionCredentialsTable
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref CriOAuthSessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref CriOAuthSessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: kmsSigningKeyPermission
              Effect: Allow
              Action:
                - 'kms:sign'
              Resource:
                - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      AutoPublishAlias: live

  BuildCriOauthRequestFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/build-cri-oauth-request-${Environment}"

  BuildCriOauthRequestFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref BuildCriOauthRequestFunctionLogGroup

  ProcessCriCallbackFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "ProcessCriCallbackLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "process-cri-callback-${Environment}"
      Handler: uk.gov.di.ipv.core.processcricallback.ProcessCriCallbackHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/process-cri-callback
      Tracing: Active
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref ProcessCriCallbackFunctionErrorCanaryAlarm, !Ref ProcessCriCallbackFunction5xxErrorCanaryAlarm]
          - [!Ref AWS::NoValue]
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub process-cri-callback-${Environment}
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          CRI_RESPONSE_TABLE_NAME: !Ref CRIResponseTable
          CRI_OAUTH_SESSIONS_TABLE_NAME: !Ref CriOAuthSessionsTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          SESSION_CREDENTIALS_TABLE_NAME: !Ref SessionCredentialsTable
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-proxy-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: { }
        - DynamoDBWritePolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref CriOAuthSessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref CriOAuthSessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref CRIResponseTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionCredentialsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/credentialIssuers/*/connections/*/apiKey-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/self/ciConfig-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/cimitApi/apiKey-*
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
            - Sid: kmsSigningKeyPermission
              Effect: Allow
              Action:
                - 'kms:sign'
              Resource:
                - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCoreCriCallback:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCorePrivateAPI
            Path: /cri/callback
            Method: POST
      AutoPublishAlias: live

  ProcessCriCallbackFunctionTestingApiPermission:
    Type: AWS::Lambda::Permission
    Condition: IsTestApiEnv
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref ProcessCriCallbackFunction.Alias
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${IPVCoreInternalTestingApi}/*/POST/cri/callback"

  ProcessCriCallbackLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/process-cri-callback-${Environment}"

  ProcessCriCallbackLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref ProcessCriCallbackLogGroup

  ProcessMobileAppCallbackFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "ProcessMobileAppCallbackLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "process-mobile-app-callback-${Environment}"
      Handler: uk.gov.di.ipv.core.processmobileappcallback.ProcessMobileAppCallbackHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/process-mobile-app-callback
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub process-mobile-app-callback-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          CRI_OAUTH_SESSIONS_TABLE_NAME: !Ref CriOAuthSessionsTable
          CRI_RESPONSE_TABLE_NAME: !Ref CRIResponseTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-proxy-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: { }
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref CriOAuthSessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref CRIResponseTable
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
      Events:
        IPVCoreMobileAppCallback:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCorePrivateAPI
            Path: /app/callback
            Method: POST
      AutoPublishAlias: live

  ProcessMobileAppCallbackFunctionTestingApiPermission:
    Type: AWS::Lambda::Permission
    Condition: IsTestApiEnv
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref ProcessMobileAppCallbackFunction.Alias
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${IPVCoreInternalTestingApi}/*/POST/app/callback"

  ProcessMobileAppCallbackLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/process-mobile-app-callback-${Environment}"

  ProcessMobileAppCallbackLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref ProcessMobileAppCallbackLogGroup

  CheckMobileAppVcReceiptFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "CheckMobileAppVcReceiptLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "check-mobile-app-vc-receipt-${Environment}"
      Handler: uk.gov.di.ipv.core.checkmobileappvcreceipt.CheckMobileAppVcReceiptHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/check-mobile-app-vc-receipt
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub check-mobile-app-vc-receipt-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          CRI_RESPONSE_TABLE_NAME: !Ref CRIResponseTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          SESSION_CREDENTIALS_TABLE_NAME: !Ref SessionCredentialsTable
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-proxy-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: { }
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref CRIResponseTable
        - DynamoDBReadPolicy:
            TableName: !Ref SessionCredentialsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionCredentialsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/self/ciConfig-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/cimitApi/apiKey-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/evcs/apiKey-*
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
      Events:
        IPVCoreCheckMobileAppVcReceipt:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCorePrivateAPI
            Path: /app/check-vc-receipt
            Method: GET
      AutoPublishAlias: live

  CheckMobileAppVcReceiptFunctionTestingApiPermission:
    Type: AWS::Lambda::Permission
    Condition: IsTestApiEnv
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref CheckMobileAppVcReceiptFunction.Alias
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${IPVCoreInternalTestingApi}/*/GET/app/check-vc-receipt"

  CheckMobileAppVcReceiptLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/check-mobile-app-vc-receipt-${Environment}"

  CheckMobileAppVcReceiptLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref CheckMobileAppVcReceiptLogGroup


  BuildUserIdentityFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "BuildUserIdentityFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "build-user-identity-${Environment}"
      Handler: uk.gov.di.ipv.core.builduseridentity.BuildUserIdentityHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/build-user-identity
      Tracing: Active
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref BuildUserIdentityFunctionErrorCanaryAlarm, !Ref BuildUserIdentityFunction5xxErrorCanaryAlarm]
          - [!Ref AWS::NoValue]
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub build-user-identity-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          SESSION_CREDENTIALS_TABLE_NAME: !Ref SessionCredentialsTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-proxy-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: {}
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionCredentialsTable
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/self/ciConfig-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/cimitApi/apiKey-*
        - Statement:
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      Events:
        IPVCoreExternalAPIUserIdentity:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCoreExternalAPI
            Path: /user-identity
            Method: GET
      AutoPublishAlias: live

  BuildUserIdentityFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/build-user-identity-${Environment}"

  BuildUserIdentityFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref BuildUserIdentityFunctionLogGroup

  UserReverificationFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "UserReverificationFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "user-reverification-${Environment}"
      Handler: uk.gov.di.ipv.core.userreverification.UserReverificationHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/user-reverification
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub user-reverification-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          SESSION_CREDENTIALS_TABLE_NAME: !Ref SessionCredentialsTable
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-proxy-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: {}
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionCredentialsTable
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
      Events:
        IPVCoreExternalAPIReverification:
          Type: Api
          Properties:
            RestApiId:
              Ref: IPVCoreExternalAPI
            Path: /reverification
            Method: GET
      AutoPublishAlias: live

  UserReverificationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/user-reverification-${Environment}"

  UserReverificationFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref UserReverificationFunctionLogGroup


  JourneyEngineStepFunction:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: journeyEngineStepFunction.asl.json
      DefinitionSubstitutions:
        IPVProcessJourneyEventFunctionArn: !Ref IPVProcessJourneyEventFunction.Version
        CheckExistingIdentityFunctionArn: !Ref CheckExistingIdentityFunction.Version
        BuildCriOauthRequestFunctionArn: !Ref BuildCriOauthRequestFunction.Version
        BuildClientOauthResponseFunctionArn: !Ref BuildClientOauthResponseFunction.Version
        CheckGpg45ScoreFunctionArn: !Ref CheckGpg45ScoreFunction.Version
        CallDcmawAsyncCriLambdaArn: !Ref CallDcmawAsyncCriFunction.Version
        ResetSessionIdentityFunctionArn: !Ref ResetSessionIdentityFunction.Version
        CheckReverificationIdentityFunctionArn: !Ref CheckReverificationIdentityFunction.Version
        ProcessCandidateIdentityFunctionArn: !Ref ProcessCandidateIdentityFunction.Version
      AutoPublishAlias: live
      DeploymentPreference:
        Type: !Ref StepFunctionDeploymentPreference
        Interval: !If [IsProduction, 10, 5]
        Percentage: !If [IsProduction, 10, 50]
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - - !Ref JourneyEngineStepFunctionExecutionFailedCanaryAlarm
            - !Ref JourneyEngineStepFunctionTaskFailedCanaryAlarm
            - !Ref IPVProcessJourneyEventFunctionErrorCanaryAlarm
            - !Ref CheckExistingIdentityFunctionErrorCanaryAlarm
            - !Ref BuildCriOauthRequestFunctionErrorCanaryAlarm
            - !Ref BuildClientOauthResponseFunctionErrorCanaryAlarm
            - !Ref CheckGpg45ScoreFunctionErrorCanaryAlarm
            - !Ref CallDcmawAsyncCriFunctionErrorCanaryAlarm
            - !Ref ResetSessionIdentityFunctionErrorCanaryAlarm
            - !Ref CheckReverificationIdentityFunctionErrorCanaryAlarm
            - !Ref ProcessCandidateIdentityFunctionErrorCanaryAlarm
          - !Ref AWS::NoValue
        StateMachineVersionArn: !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${JourneyEngineStepFunction}:live"
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCorePrivateAPI
            Path: /journey/{journeyStep+}
            Method: POST
        IPVCoreInternalTestingApi:
          Condition: IsTestApiEnv
          Type: Api
          Properties:
            RestApiId: !Ref IPVCoreInternalTestingApi
            Path: /journey/{journeyStep+}
            Method: POST
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt JourneyEngineStepFunctionLogGroup.Arn
        IncludeExecutionData: true
        Level: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, journeyEngineStepFunctionLogLevel ]
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref IPVProcessJourneyEventFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CheckExistingIdentityFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref BuildCriOauthRequestFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref BuildClientOauthResponseFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CheckGpg45ScoreFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CallDcmawAsyncCriFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ResetSessionIdentityFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CheckReverificationIdentityFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessCandidateIdentityFunction
        - Statement:
            - Sid: CloudWatchLogsAccess
              Effect: Allow
              Action:
                - "logs:CreateLogDelivery"
                - "logs:GetLogDelivery"
                - "logs:UpdateLogDelivery"
                - "logs:DeleteLogDelivery"
                - "logs:ListLogDeliveries"
                - "logs:PutLogEvents"
                - "logs:PutResourcePolicy"
                - "logs:DescribeResourcePolicies"
                - "logs:DescribeLogGroups"
              Resource: "*"
      Tracing:
        Enabled: true
      Type: EXPRESS
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  JourneyEngineStepFunctionApiGateWayIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: AllowApiGatewayToInvokeStartSyncExecution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'states:StartSyncExecution'
                Resource: !Ref JourneyEngineStepFunction
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  JourneyEngineStepFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/states/journey-engine-step-function-${Environment}"

  JourneyEngineStepFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref JourneyEngineStepFunctionLogGroup

  IPVProcessJourneyEventFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "IPVProcessJourneyEventFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "process-journey-event-${Environment}"
      Handler: uk.gov.di.ipv.core.processjourneyevent.ProcessJourneyEventHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/process-journey-event
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub process-journey-event-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          CRI_OAUTH_SESSIONS_TABLE_NAME: !Ref CriOAuthSessionsTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: {}
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref CriOAuthSessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/evcs/apiKey-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/self/ciConfig-*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
      AutoPublishAlias: live

  IPVProcessJourneyEventFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/process-journey-event-${Environment}"

  IPVProcessJourneyEventFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref IPVProcessJourneyEventFunctionLogGroup

  BuildProvenUserIdentityDetailsFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - BuildProvenUserIdentityDetailsFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "build-proven-user-identity-details-${Environment}"
      Handler: uk.gov.di.ipv.core.buildprovenuseridentitydetails.BuildProvenUserIdentityDetailsHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/build-proven-user-identity-details
      Tracing: Active
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref BuildProvenUserIdentityDetailsFunctionErrorCanaryAlarm,!Ref BuildProvenUserIdentityDetailsFunction5xxErrorCanaryAlarm]
          - [!Ref AWS::NoValue]
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub build-proven-user-identity-details-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          SESSION_CREDENTIALS_TABLE_NAME: !Ref SessionCredentialsTable
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-proxy-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: { }
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref SessionCredentialsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
      Events:
        IPVCorePrivateAPI:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCorePrivateAPI
            Path: /user/proven-identity-details
            Method: GET
      AutoPublishAlias: live

  BuildProvenUserIdentityDetailsFunctionTestingApiPermission:
    Type: AWS::Lambda::Permission
    Condition: IsTestApiEnv
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref BuildProvenUserIdentityDetailsFunction.Alias
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${IPVCoreInternalTestingApi}/*/GET/user/proven-identity-details"

  BuildProvenUserIdentityDetailsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/build-proven-user-identity-details-${Environment}"

  BuildProvenUserIdentityDetailsFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref BuildProvenUserIdentityDetailsFunctionLogGroup


  CheckExistingIdentityFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - CheckExistingIdentityFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "check-existing-identity-${Environment}"
      Handler: uk.gov.di.ipv.core.checkexistingidentity.CheckExistingIdentityHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/check-existing-identity
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub check-existing-identity-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          SESSION_CREDENTIALS_TABLE_NAME: !Ref SessionCredentialsTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          CRI_RESPONSE_TABLE_NAME: !Ref CRIResponseTable
          CRI_OAUTH_SESSIONS_TABLE_NAME: !Ref CriOAuthSessionsTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          # We're temporarily disabling this for lower envs to investigate the effect it has on IOExceptions
          # https://govukverify.atlassian.net/browse/PYIC-8220
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: { }
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBReadPolicy:
            TableName: !Ref CriOAuthSessionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref CRIResponseTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionCredentialsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/self/ciConfig-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/evcs/apiKey-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/sis/apiKey-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/cimitApi/apiKey-*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
      AutoPublishAlias: live

  CheckExistingIdentityFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/check-existing-identity-${Environment}"

  CheckExistingIdentityFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref CheckExistingIdentityFunctionLogGroup

  ProcessAsyncCriCredentialFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - "ProcessAsyncCriCredentialFunctionLogGroup"
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "process-async-cri-credential-${Environment}"
      Handler: uk.gov.di.ipv.core.processasynccricredential.ProcessAsyncCriCredentialHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/process-async-cri-credential
      Timeout: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, asyncCriLambdaTimeout ]
      Tracing: Active
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref ProcessAsyncCriCredentialFunctionErrorCanaryAlarm]
          - [!Ref AWS::NoValue]
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          CRI_RESPONSE_TABLE_NAME: !Ref CRIResponseTable
          POWERTOOLS_SERVICE_NAME: !Sub process-async-cri-credential-${Environment}
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: {}
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBReadPolicy:
            TableName: !Ref CRIResponseTable
        - DynamoDBWritePolicy:
            TableName: !Ref CRIResponseTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/self/ciConfig-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/evcs/apiKey-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/cimitApi/apiKey-*
        - Statement:
            - Sid: kmsSigningKeyPermission
              Effect: Allow
              Action:
                - 'kms:sign'
              Resource:
                - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
            - Sid: sharedStubAsyncCriResponseQueuePermission
              Effect: Allow
              Action:
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - sqs:ReceiveMessage
              Resource: !If
                - IsDevOrBuildOrStaging
                - !If
                  - IsDevelopment
                  - !Sub
                    - "${BaseArn}_${Environment}"
                    - BaseArn: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, sharedStubAsyncCriResponseQueueArn ]
                  - !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, sharedStubAsyncCriResponseQueueArn ]
                - "arn:aws:sqs:region:000000000000:not-used" # to satisfy linter - never actually used
            - Sid: f2fAsyncCriResponseQueuePermission
              Effect: Allow
              Action:
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - sqs:ReceiveMessage
              Resource: !If
                - IsStagingIntProd
                - !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, f2fAsyncCriResponseQueueArn ]
                - "arn:aws:sqs:region:000000000000:not-used" # to satisfy linter - never actually used
            - Sid: dcmawAsyncCriResponseQueuePermission
              Effect: Allow
              Action:
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
                - sqs:ReceiveMessage
              Resource: !If
                - IsStagingIntProd
                - !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, dcmawAsyncCriResponseQueueArn ]
                - "arn:aws:sqs:region:000000000000:not-used" # to satisfy linter - never actually used
            - Sid: sharedStubAsyncCriResponseQueueKmsKeyPermission
              Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !If
                - IsDevOrBuildOrStaging
                - !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, sharedStubAsyncCriResponseQueueKmsKeyArn ]
                - "arn:aws:sqs:region:000000000000:not-used" # to satisfy linter - never actually used
            - Sid: f2fAsyncCriResponseQueueKmsKeyPermission
              Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !If
                - IsStagingIntProd
                - !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, f2fAsyncCriResponseQueueKmsKeyArn ]
                - "arn:aws:sqs:region:000000000000:not-used" # to satisfy linter - never actually used
            - Sid: dcmawAsyncCriResponseQueueKmsKeyPermission
              Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !If
                - IsStagingIntProd
                - !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, dcmawAsyncCriResponseQueueKmsKeyArn ]
                - "arn:aws:sqs:region:000000000000:not-used" # to satisfy linter - never actually used
      AutoPublishAlias: live

  ProcessAsyncCriCredentialFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/process-async-cri-credential-${Environment}"

  ProcessAsyncCriCredentialFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref ProcessAsyncCriCredentialFunctionLogGroup

  SharedStubQueueEventSourceMapping:
    Condition: IsDevOrBuildOrStaging
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName: !Ref ProcessAsyncCriCredentialFunction
      EventSourceArn: !If
        - IsDevelopment
        - !Sub
          - "${BaseArn}_${Environment}"
          - BaseArn: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, sharedStubAsyncCriResponseQueueArn ]
        - !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, sharedStubAsyncCriResponseQueueArn ]
      BatchSize: 1
      Enabled: true
      FunctionResponseTypes:
        - ReportBatchItemFailures

  F2fQueueEventSourceMapping:
    Condition: IsStagingIntProd
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName: !Ref ProcessAsyncCriCredentialFunction
      EventSourceArn: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, f2fAsyncCriResponseQueueArn ]
      BatchSize: 1
      Enabled: true
      FunctionResponseTypes:
        - ReportBatchItemFailures

  DcmawQueueEventSourceMapping:
    Condition: IsStagingIntProd
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName: !Ref ProcessAsyncCriCredentialFunction
      EventSourceArn: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, dcmawAsyncCriResponseQueueArn ]
      BatchSize: 1
      Enabled: true
      FunctionResponseTypes:
        - ReportBatchItemFailures

  CheckGpg45ScoreFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - CheckGpg45ScoreFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "check-gpg45-score-${Environment}"
      Handler: uk.gov.di.ipv.core.checkgpg45score.CheckGpg45ScoreHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/check-gpg45-score
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub check-gpg45-score-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          SESSION_CREDENTIALS_TABLE_NAME: !Ref SessionCredentialsTable
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: { }
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBReadPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref SessionCredentialsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - Statement:
          - Sid: AppConfigAccess
            Effect: Allow
            Action:
              - appconfig:StartConfigurationSession
              - appconfig:GetLatestConfiguration
            Resource:
              - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
              - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
          - Sid: EnforceStayinSpecificVpc
            Effect: Allow
            Action:
              - 'lambda:CreateFunction'
              - 'lambda:UpdateFunctionConfiguration'
            Resource:
              - "*"
            Condition:
              StringEquals:
                "lambda:VpcIds":
                  - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
      AutoPublishAlias: live

  CheckGpg45ScoreFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/check-gpg45-score-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  CheckGpg45ScoreFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref CheckGpg45ScoreFunctionLogGroup

  ValidateAppConfigFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - ValidateAppConfigFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "validate-appconfig-${Environment}"
      Handler: uk.gov.di.ipv.core.validateappconfig.ValidateAppConfigHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/validate-appconfig
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub validate-appconfig-${Environment}
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: { }
        - Statement:
          - Sid: EnforceStayinSpecificVpc
            Effect: Allow
            Action:
              - 'lambda:CreateFunction'
              - 'lambda:UpdateFunctionConfiguration'
            Resource:
              - "*"
            Condition:
              StringEquals:
                "lambda:VpcIds":
                  - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
      AutoPublishAlias: live

  ValidateAppConfigFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/validate-appconfig-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  ValidateAppConfigFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref ValidateAppConfigFunctionLogGroup

  ValidateAppConfigInvokePermission:
    Type: AWS::Lambda::Permission
    Condition: IsBuildStagingIntProd
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref ValidateAppConfigFunction
      Principal: "appconfig.amazonaws.com"
      SourceArn: !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/${AppConfigApplication}/configurationprofile/${AppConfigConfigurationProfile}"

#  App Config Pipeline
  AppConfigPipelineValidateFunctionInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub "${ValidateAppConfigFunction.Arn}:live"
      Action: lambda:InvokeFunction
      Principal: appconfig.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*

  CallDcmawAsyncCriFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - CallDcmawAsyncCriFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "call-dcmaw-async-cri-${Environment}"
      Handler: uk.gov.di.ipv.core.calldcmawasynccri.CallDcmawAsyncCriHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/call-dcmaw-async-cri
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub call-dcmaw-async-cri-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          CRI_OAUTH_SESSIONS_TABLE_NAME: !Ref CriOAuthSessionsTable
          SESSION_CREDENTIALS_TABLE_NAME: !Ref SessionCredentialsTable
          CRI_RESPONSE_TABLE_NAME: !Ref CRIResponseTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: { }
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref CRIResponseTable
        - DynamoDBReadPolicy:
            TableName: !Ref SessionCredentialsTable
        - DynamoDBReadPolicy:
            TableName: !Ref CriOAuthSessionsTable
        - DynamoDBWritePolicy:
            TableName: !Ref CriOAuthSessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/credentialIssuers/dcmawAsync/connections/*/oAuthClientSecret-*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
      AutoPublishAlias: live

  CallDcmawAsyncCriFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/call-dcmaw-async-cri-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  CallDcmawAsyncCriFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref CallDcmawAsyncCriFunctionLogGroup

  ResetSessionIdentityFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - ResetSessionIdentityFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "reset-session-identity-${Environment}"
      Handler: uk.gov.di.ipv.core.resetsessionidentity.ResetSessionIdentityHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/reset-session-identity
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub reset-session-identity-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          SESSION_CREDENTIALS_TABLE_NAME: !Ref SessionCredentialsTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          CRI_RESPONSE_TABLE_NAME: !Ref CRIResponseTable
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: { }
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/evcs/apiKey-*
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionCredentialsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref CRIResponseTable
      AutoPublishAlias: live

  ResetSessionIdentityFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/reset-session-identity-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  ResetSessionIdentityFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref ResetSessionIdentityFunctionLogGroup

  CheckReverificationIdentityFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - CheckReverificationIdentityFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "check-reverification-identity-${Environment}"
      Handler: uk.gov.di.ipv.core.checkreverificationidentity.CheckReverificationIdentityHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/check-reverification-identity
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub check-reverification-identity-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-handler
            - !Ref AWS::NoValue
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: { }
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/evcs/apiKey-*
      AutoPublishAlias: live

  CheckReverificationIdentityFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/check-reverification-identity-${Environment}"
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  CheckReverificationIdentityFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref CheckReverificationIdentityFunctionLogGroup

  ProcessCandidateIdentityFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - ProcessCandidateIdentityFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "process-candidate-identity-${Environment}"
      Handler: uk.gov.di.ipv.core.processcandidateidentity.ProcessCandidateIdentityHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/process-candidate-identity
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub process-candidate-identity-${Environment}
          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable
          CLIENT_OAUTH_SESSIONS_TABLE_NAME: !Ref ClientOAuthSessionsTable
          SESSION_CREDENTIALS_TABLE_NAME: !Ref SessionCredentialsTable
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
          AWS_LAMBDA_EXEC_WRAPPER: !If
            - UseDynatrace
            - /opt/otel-handler
            - !Ref AWS::NoValue
          DID_STORED_IDENTITY_ID: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, didStoredIdentityId ]
      Layers:
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryCollectorLayerArn
          ]
          - !Ref AWS::NoValue
        - !If
          - UseDynatrace
          - !FindInMap [
            EnvironmentConfiguration,
            !Ref 'AWS::AccountId',
            opentelemetryJavaWrapperLayerArn
          ]
          - !Ref AWS::NoValue
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: {}
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
            - Sid: EnforceStayinSpecificVpc
              Effect: Allow
              Action:
                - 'lambda:CreateFunction'
                - 'lambda:UpdateFunctionConfiguration'
              Resource:
                - "*"
              Condition:
                StringEquals:
                  "lambda:VpcIds":
                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId
            - Sid: kmsAuditEventQueueEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn
            - Sid: kmsSigningKeyPermission
              Effect: Allow
              Action:
                - 'kms:sign'
              Resource:
                - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
            - Sid: kmsSisSigningKeyPermission
              Effect: Allow
              Action:
                - 'kms:sign'
              Resource:
                - !ImportValue StoredIdentitySigningKeyArn
        - KMSDecryptPolicy:
            KeyId: !Ref DynamoDBKmsKey
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
        - DynamoDBReadPolicy:
            TableName: !Ref SessionCredentialsTable
        - DynamoDBReadPolicy:
            TableName: !Ref ClientOAuthSessionsTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${Environment}/core/*
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/self/ciConfig-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/credentialIssuers/ticf/connections/*/apiKey-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/cimitApi/apiKey-*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/evcs/apiKey-*
      AutoPublishAlias: live

  ProcessCandidateIdentityFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/process-candidate-identity-${Environment}"

  ProcessCandidateIdentityFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref ProcessCandidateIdentityFunctionLogGroup

  FetchJourneyTransitionsFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - FetchJourneyTransitionsFunctionLogGroup
      - IPVProcessJourneyEventFunctionLogGroup
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "fetch-journey-transitions-${Environment}"
      Description: Lambda that fetches user traffic over journey map edges.
      Handler: uk.gov.di.ipv.core.fetchjourneytransitions.FetchJourneyTransitionsHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/fetch-journey-transitions
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub fetch-journey-transitions-${Environment}
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: { }
        - Statement:
          - Sid: CloudWatchLogsInsights
            Effect: Allow
            Action:
              - logs:StartQuery
              - logs:GetQueryResults
            Resource:
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/process-journey-event-${Environment}:*
      Events:
        IPVCoreAnalyticsAPIJourneyTransitions:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCoreAnalyticsAPI
            Path: /journey-transitions
            Method: POST
      AutoPublishAlias: live

  FetchJourneyTransitionsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/fetch-journey-transitions-${Environment}"

  FetchJourneyTransitionsFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref FetchJourneyTransitionsFunctionLogGroup

  FetchJourneyTransitionsFunctionPermission:
    Type: AWS::Lambda::Permission
    DependsOn: FetchJourneyTransitionsFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref FetchJourneyTransitionsFunction.Alias
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${IPVCoreAnalyticsAPI}/*/*/*"

  FetchSystemSettingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.
      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.
      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.
      FunctionName: !Sub "fetch-system-settings-${Environment}"
      Description: "Lambda that fetches AppConfig to discover feature flag and CRI enabled settings."
      Handler: uk.gov.di.ipv.core.fetchsystemsettings.FetchSystemSettingsHandler::handleRequest
      PackageType: Zip
      CodeUri: ../lambdas/fetch-system-settings
      Tracing: Active
      Environment:
        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub fetch-system-settings-${Environment}
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - !GetAtt LambdaSecurityGroup.GroupId
      Policies:
        - VPCAccessPolicy: { }
        - Statement:
            - Sid: AppConfigAccess
              Effect: Allow
              Action:
                - appconfig:StartConfigurationSession
                - appconfig:GetLatestConfiguration
              Resource:
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
                - !Sub "arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/*"
      Events:
        IPVCoreAnalyticsAPIJourneyTransitions:
          Type: Api
          Properties:
            RestApiId: !Ref IPVCoreAnalyticsAPI
            Path: /system-settings
            Method: POST
      AutoPublishAlias: live

  FetchSystemSettingsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    # checkov:skip=CKV_AWS_158: No need for customer managed keys for short lived logs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub "/aws/lambda/fetch-system-settings-${Environment}"

  FetchSystemSettingsFunctionLogGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsStagingIntProd
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref FetchSystemSettingsFunctionLogGroup

  FetchSystemSettingsFunctionPermission:
    Type: AWS::Lambda::Permission
    DependsOn: FetchSystemSettingsFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref FetchSystemSettingsFunction.Alias
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${IPVCoreAnalyticsAPI}/*/*/*"

  SessionCredentialsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      # checkov:skip=CKV_AWS_28: Point in time recovery is not necessary for this table
      TableName: !Sub "session-credentials-${Environment}"
      BillingMode: "PAY_PER_REQUEST"
      DeletionProtectionEnabled: !If
        - IsProduction
        - true
        - false
      AttributeDefinitions:
        - AttributeName: "ipvSessionId"
          AttributeType: "S"
        - AttributeName: "sortKey"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ipvSessionId"
          KeyType: "HASH"
        - AttributeName: "sortKey"
          KeyType: "RANGE"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DynamoDBKmsKey.Arn

  CRIResponseTable:
    Type: AWS::DynamoDB::Table
    Properties:
      # checkov:skip=CKV_AWS_28: Point in time recovery is not necessary for this table.
      TableName: !Sub "cri-response-${Environment}"
      BillingMode: "PAY_PER_REQUEST"
      DeletionProtectionEnabled: !If
        - IsProduction
        - true
        - false
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: !If
          - IsProduction
          - true
          - false
      AttributeDefinitions:
        - AttributeName: "userId"
          AttributeType: "S"
        - AttributeName: "credentialIssuer"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "userId"
          KeyType: "HASH"
        - AttributeName: "credentialIssuer"
          KeyType: "RANGE"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DynamoDBKmsKey.Arn
      Tags:
        - Key: "BackupFrequency"
          Value: "Daily"

  SessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      # checkov:skip=CKV_AWS_28: Point in time recovery is not necessary for this table.
      TableName: !Sub "sessions-${Environment}"
      BillingMode: "PAY_PER_REQUEST"
      DeletionProtectionEnabled: !If
        - IsProduction
        - true
        - false
      AttributeDefinitions:
        - AttributeName: "ipvSessionId"
          AttributeType: "S"
        - AttributeName: "authorizationCode"
          AttributeType: "S"
        - AttributeName: "accessToken"
          AttributeType: "S"
        - AttributeName: "criOAuthSessionId"
          AttributeType: "S"
        - AttributeName: "clientOAuthSessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ipvSessionId"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "authorizationCode"
          KeySchema:
            - AttributeName: "authorizationCode"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
        - IndexName: "accessToken"
          KeySchema:
            - AttributeName: "accessToken"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
        - IndexName: "criOAuthSessionId"
          KeySchema:
            - AttributeName: "criOAuthSessionId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
        - IndexName: "clientOAuthSessionId"
          KeySchema:
            - AttributeName: "clientOAuthSessionId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DynamoDBKmsKey.Arn

  ClientOAuthSessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      # checkov:skip=CKV_AWS_28: Point in time recovery is not necessary for this table.
      TableName: !Sub "client-oauth-sessions-v2-${Environment}"
      BillingMode: "PAY_PER_REQUEST"
      DeletionProtectionEnabled: !If
        - IsProduction
        - true
        - false
      AttributeDefinitions:
        - AttributeName: "clientOAuthSessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "clientOAuthSessionId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DynamoDBKmsKey.Arn

  ClientAuthJwtIdsTable:
    Type: AWS::DynamoDB::Table
    # checkov:skip=CKV_AWS_28: Point in time recovery is not necessary for this table.
    Properties:
      TableName: !Sub "client-auth-jwt-ids-${Environment}"
      BillingMode: "PAY_PER_REQUEST"
      DeletionProtectionEnabled: !If
        - IsProduction
        - true
        - false
      AttributeDefinitions:
        - AttributeName: "jwtId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "jwtId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DynamoDBKmsKey.Arn

  CriOAuthSessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      # checkov:skip=CKV_AWS_28: Point in time recovery is not necessary for this table.
      TableName: !Sub "cri-oauth-sessions-${Environment}"
      BillingMode: "PAY_PER_REQUEST"
      DeletionProtectionEnabled: !If
        - IsProduction
        - true
        - false
      AttributeDefinitions:
        - AttributeName: "criOAuthSessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "criOAuthSessionId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DynamoDBKmsKey.Arn

  DynamoDBKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: "dynamodb.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              StringEquals:
                "kms:CallerAccount": !Sub "${AWS::AccountId}"
                "kms:ViaService":
                  - "dynamodb.amazonaws.com"
                  - !Sub "lambda.${AWS::Region}.amazonaws.com"

  LoggingKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      PermissionsBoundary: !If [ UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue ]

  ####################################################################
  #                                                                  #
  # Monitoring & Alerts                                              #
  #                                                                  #
  ####################################################################

  CoreApiPrivateGw5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: IsNotDevelopment
    Properties:
        AlarmName: PrivateApiGateWay5xxAlarm
        AlarmDescription: !Sub
          - 'The internal API gateway in front of core-back has returned 2 or more 500 errors in a 5 minute period, for 3 periods in a row. See runbook: ${RunbookUrl}'
          - RunbookUrl: !FindInMap [ Constants, Urls, pagerDutyRunbook ]
        ActionsEnabled: true
        AlarmActions:
          - !ImportValue sns-topics-AlarmTopic
        OKActions:
          - !ImportValue sns-topics-AlarmTopic
        InsufficientDataActions: []
        EvaluationPeriods: 3
        DatapointsToAlarm: 3
        Threshold: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, pgw500ErrorLimit ]
        ComparisonOperator: GreaterThanThreshold
        TreatMissingData: notBreaching
        Metrics:
            - Id: e1
              Label: Sum-of-5xx-Errors
              ReturnData: true
              Expression: SUM(METRICS())
            - Id: m1
              ReturnData: false
              MetricStat:
                  Metric:
                      Namespace: AWS/ApiGateway
                      MetricName: 5XXError
                      Dimensions:
                          - Name: ApiName
                            Value: !Sub IPV Core Private API Gateway ${Environment}
                  Period: 300
                  Stat: Sum

  CoreApiExternalGw5xxErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: IsNotDevelopment
    Properties:
      AlarmName: ExternalApiGateWay5xxAlarm
      AlarmDescription: !Sub
        - 'The external API gateway in front of core-back has returned 2 or more 500 errors in a 5 minute period, for 3 periods in a row. See runbook: ${RunbookUrl}'
        - RunbookUrl: !FindInMap [ Constants, Urls, pagerDutyRunbook ]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue sns-topics-AlarmTopic
      OKActions:
        - !ImportValue sns-topics-AlarmTopic
      InsufficientDataActions: []
      EvaluationPeriods: 3
      DatapointsToAlarm: 3
      Threshold: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, egw500ErrorLimit ]
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          Label: Sum-of-5xx-Errors
          ReturnData: true
          Expression: SUM(METRICS())
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub IPV Core External API Gateway ${Environment}
            Period: 300
            Stat: Sum

  LatencyAlarm:
    Condition: IsNotDevelopment
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-apiGWLatencyAlarm"
      AlarmDescription: "There has been increased latency on backend api-gateway"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      OKActions:
        - !ImportValue alarm-alerts-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 2500
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: safeLatency
          Label: safeLatency
          ReturnData: true
          Expression: IF(invocations<10,0,maxLatency)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - Core API"
            Period: 60
            Stat: Sum
        - Id: maxLatency
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Latency
              Dimensions:
                - Name: ApiName
                  Value: !Sub "${AWS::StackName} - Core API"
            Period: 60
            Stat: Maximum

  LambdaThrottleAlarm:
    Condition: IsNotDevelopment
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "Trigger the alarm if any lambda in the account throttles"
      AlarmName: !Sub "${AWS::StackName}-LambdaThrottleAlarm"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      OKActions:
        - !ImportValue alarm-alerts-topic
      InsufficientDataActions: []
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold

  LambdaDurationAlarm:
    Condition: IsNotDevelopment
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-LambdaDurationAlarm"
      AlarmDescription: Alarm for Lambda functions running longer than 5 minutes
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      OKActions:
        - !ImportValue alarm-alerts-topic
      MetricName: Duration
      Namespace: AWS/Lambda
      Statistic: Maximum
      Period: 60
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      Threshold: 30000 #30k milliseconds = 30 seconds
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  IOExceptionAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsNotDevelopment
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmName: !Sub ${AWS::StackName}-IOExceptionInLogs
      InsufficientDataActions: []
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: ioExceptionMetric
          Label: IOException Count
          ReturnData: true
          MetricStat:
            Metric:
              Namespace: Custom/Lambda
              MetricName: IOExceptionCount
            Period: 60
            Stat: Sum

  DwpKbvCriReturnRateAlarm:
    Condition: IsNotDevelopment
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${AWS::StackName}-DwpKbvCriReturnRateAlarm
      AlarmDescription: "Alarm if DWP KBV CRI return rate is 0 for 3 consecutive 5-minute windows"
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      EvaluationPeriods: 3
      Threshold: 0
      ComparisonOperator: LessThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: redirect
          MetricStat:
            Metric:
              Namespace: !Sub "CoreBackEmbeddedMetrics-${Environment}"
              MetricName: criRedirect
              Dimensions:
                - Name: cri
                  Value: dwpKbv
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: returned
          MetricStat:
            Metric:
              Namespace: !Sub "CoreBackEmbeddedMetrics-${Environment}"
              MetricName: criReturn
              Dimensions:
                - Name: cri
                  Value: dwpKbv
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: returnRate
          Expression: "returned / redirect"
          Label: "DWP KBV CRI Return Rate"
          ReturnData: true

  IssueClientAccessTokenFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref IssueClientAccessTokenFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  ManualF2fPendingResetFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref ManualF2fPendingResetFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  BuildClientOauthResponseFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BuildClientOauthResponseFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  InitialiseIpvSessionFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref InitialiseIpvSessionFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  BuildCriOauthRequestFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BuildCriOauthRequestFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  ProcessCriCallbackIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref ProcessCriCallbackLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  ProcessMobileAppCallbackIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref ProcessMobileAppCallbackLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  CheckMobileAppVcReceiptIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref CheckMobileAppVcReceiptLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  BuildUserIdentityFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BuildUserIdentityFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  UserReverificationFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref UserReverificationFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  JourneyEngineStepFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref JourneyEngineStepFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  IPVProcessJourneyEventFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref IPVProcessJourneyEventFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  BuildProvenUserIdentityDetailsFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BuildProvenUserIdentityDetailsFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  CheckExistingIdentityFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref CheckExistingIdentityFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  ProcessAsyncCriCredentialFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref ProcessAsyncCriCredentialFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  CheckGpg45ScoreFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref CheckGpg45ScoreFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  CallDcmawAsyncCriFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref CallDcmawAsyncCriFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  ResetSessionIdentityFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref ResetSessionIdentityFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  CheckReverificationIdentityFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref CheckReverificationIdentityFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  ProcessCandidateIdentityFunctionIOExceptionMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref ProcessCandidateIdentityFunctionLogGroup
      FilterPattern: '{ $.message.errorDescription = "java.io.IOException: <init>" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: Custom/Lambda
          MetricName: IOExceptionCount

  ####################################################################
  #                                                                  #
  # Canary Alarms for individual lambdas                             #
  #                                                                  #
  ####################################################################

  ManualF2fPendingResetFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: "Error returned from the ManualF2fPendingResetFunction."
      AlarmName: !Sub ${AWS::StackName}-ManualF2fPendingReset-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "manual-f2f-pending-reset-${Environment}:live"
        - Name: FunctionName
          Value: !Ref ManualF2fPendingResetFunction
        - Name: ExecutedVersion
          Value: !GetAtt ManualF2fPendingResetFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  IssueClientAccessTokenFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: "Error returned from the IssueClientAccessTokenFunction."
      AlarmName: !Sub ${AWS::StackName}-IssueClientAccessTokenFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "issue-client-access-token-${Environment}:live"
        - Name: FunctionName
          Value: !Ref IssueClientAccessTokenFunction
        - Name: ExecutedVersion
          Value: !GetAtt IssueClientAccessTokenFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  IssueClientAccessTokenFunction5xxErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "IssueClientAccessTokenFunction returning 5xx response."
      AlarmName: !Sub ${AWS::StackName}-IssueClientAccessTokenFunction-5xxErrorCanary
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub IPV Core External API Gateway ${Environment}
        - Name: Method
          Value: POST
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /token
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  InitialiseIpvSessionFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the InitialiseIpvSessionFunction."
      AlarmName: !Sub ${AWS::StackName}-InitialiseIpvSessionFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "initialise-ipv-session-${Environment}:live"
        - Name: FunctionName
          Value: !Ref InitialiseIpvSessionFunction
        - Name: ExecutedVersion
          Value: !GetAtt InitialiseIpvSessionFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  InitialiseIpvSessionFunction5xxErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "InitialiseIpvSessionFunction returning 5xx response."
      AlarmName: !Sub ${AWS::StackName}-InitialiseIpvSessionFunction-5xxErrorCanary
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !If [IsTestApiEnv, !Sub "IPV Core Private Testing API Gateway ${Environment}", !Sub "IPV Core Private API Gateway ${Environment}"]
        - Name: Method
          Value: POST
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /session/initialise
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ProcessCriCallbackFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the ProcessCriCallbackFunction."
      AlarmName: !Sub ${AWS::StackName}-ProcessCriCallbackFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "process-cri-callback-${Environment}:live"
        - Name: FunctionName
          Value: !Ref ProcessCriCallbackFunction
        - Name: ExecutedVersion
          Value: !GetAtt ProcessCriCallbackFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ProcessCriCallbackFunction5xxErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "ProcessCriCallbackFunction returning 5xx response."
      AlarmName: !Sub ${AWS::StackName}-ProcessCriCallbackFunction-5xxErrorCanary
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !If [IsTestApiEnv, !Sub "IPV Core Private Testing API Gateway ${Environment}", !Sub "IPV Core Private API Gateway ${Environment}"]
        - Name: Method
          Value: POST
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /cri/callback
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  BuildUserIdentityFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the BuildUserIdentityFunction."
      AlarmName: !Sub ${AWS::StackName}-BuildUserIdentityFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "build-user-identity-${Environment}:live"
        - Name: FunctionName
          Value: !Ref BuildUserIdentityFunction
        - Name: ExecutedVersion
          Value: !GetAtt BuildUserIdentityFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  BuildUserIdentityFunction5xxErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "BuildUserIdentityFunction returning 5xx response."
      AlarmName: !Sub ${AWS::StackName}-BuildUserIdentityFunction-5xxErrorCanary
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub IPV Core External API Gateway ${Environment}
        - Name: Method
          Value: GET
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /user-identity
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ProcessAsyncCriCredentialFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the ProcessAsyncCriCredentialFunction."
      AlarmName: !Sub ${AWS::StackName}-ProcessAsyncCriCredentialFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "process-async-cri-credential-${Environment}:live"
        - Name: FunctionName
          Value: !Ref ProcessAsyncCriCredentialFunction
        - Name: ExecutedVersion
          Value: !GetAtt ProcessAsyncCriCredentialFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  BuildProvenUserIdentityDetailsFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the BuildProvenUserIdentityDetailsFunction."
      AlarmName: !Sub ${AWS::StackName}-BuildProvenUserIdentityDetailsFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "build-proven-user-identity-details-${Environment}:live"
        - Name: FunctionName
          Value: !Ref BuildProvenUserIdentityDetailsFunction
        - Name: ExecutedVersion
          Value: !GetAtt BuildProvenUserIdentityDetailsFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  BuildProvenUserIdentityDetailsFunction5xxErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "BuildProvenUserIdentityDetailsFunction returning 5xx response."
      AlarmName: !Sub ${AWS::StackName}-BuildProvenUserIdentityDetailsFunction-5xxErrorCanary
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !If [IsTestApiEnv, !Sub "IPV Core Private Testing API Gateway ${Environment}", !Sub "IPV Core Private API Gateway ${Environment}"]
        - Name: Method
          Value: POST
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /user/proven-identity-details
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ####################################################################
  #                                                                  #
  # Canary Alarms for step function and its lambdas                  #
  #                                                                  #
  ####################################################################

  JourneyEngineStepFunctionExecutionFailedCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmName: !Sub ${AWS::StackName}-JourneyEngineStepFunction-ExecutionFailedCanary
      AlarmDescription: !Sub "Error returned from the JourneyEngineStepFunction ${JourneyEngineStepFunction.StateMachineRevisionId}"
      MetricName: ExecutionsFailed
      Dimensions:
        - Name: StateMachineArn
          Value: !GetAtt JourneyEngineStepFunction.Arn
      Namespace: AWS/States
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  JourneyEngineStepFunctionTaskFailedMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref JourneyEngineStepFunctionLogGroup
      FilterPattern: '{$.type = "TaskFailed"}'
      MetricTransformations:
        - MetricValue: "1"
          MetricName: "JourneyEngineStepFunctionTaskFailed"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"

  JourneyEngineStepFunctionTaskFailedCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmName: !Sub ${AWS::StackName}-JourneyEngineStepFunction-TaskFailedCanary
      AlarmDescription: !Sub "TaskFailed error returned from the JourneyEngineStepFunction"
      MetricName: "JourneyEngineStepFunctionTaskFailed"
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  JourneyEngineStepFunction5xxErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmName: !Sub ${AWS::StackName}-JourneyEngineStepFunction-5xxErrorCanary
      AlarmDescription: "JourneyEngineStepFunction returning 5xx response."
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !If [IsTestApiEnv, !Sub "IPV Core Private Testing API Gateway ${Environment}", !Sub "IPV Core Private API Gateway ${Environment}"]
        - Name: Method
          Value: POST
        - Name: Stage
          Value: !Ref Environment
        - Name: Resource
          Value: /journey/{journeyStep+}
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  IPVProcessJourneyEventFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the IPVProcessJourneyEventFunction."
      AlarmName: !Sub ${AWS::StackName}-IPVProcessJourneyEventFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "process-journey-event-${Environment}:live"
        - Name: FunctionName
          Value: !Ref IPVProcessJourneyEventFunction
        - Name: ExecutedVersion
          Value: !GetAtt IPVProcessJourneyEventFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CheckExistingIdentityFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the CheckExistingIdentityFunction."
      AlarmName: !Sub ${AWS::StackName}-CheckExistingIdentityFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "check-existing-identity-${Environment}:live"
        - Name: FunctionName
          Value: !Ref CheckExistingIdentityFunction
        - Name: ExecutedVersion
          Value: !GetAtt CheckExistingIdentityFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  BuildCriOauthRequestFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the BuildCriOauthRequestFunction."
      AlarmName: !Sub ${AWS::StackName}-BuildCriOauthRequestFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "build-cri-oauth-request-${Environment}:live"
        - Name: FunctionName
          Value: !Ref BuildCriOauthRequestFunction
        - Name: ExecutedVersion
          Value: !GetAtt BuildCriOauthRequestFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  BuildClientOauthResponseFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the BuildClientOauthResponseFunction."
      AlarmName: !Sub ${AWS::StackName}-BuildClientOauthResponseFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "build-client-oauth-response-${Environment}:live"
        - Name: FunctionName
          Value: !Ref BuildClientOauthResponseFunction
        - Name: ExecutedVersion
          Value: !GetAtt BuildClientOauthResponseFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CheckGpg45ScoreFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the CheckGpg45ScoreFunction."
      AlarmName: !Sub ${AWS::StackName}-CheckGpg45ScoreFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "check-gpg45-score-${Environment}:live"
        - Name: FunctionName
          Value: !Ref CheckGpg45ScoreFunction
        - Name: ExecutedVersion
          Value: !GetAtt CheckGpg45ScoreFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CallDcmawAsyncCriFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the CallDcmawAsyncCriFunction."
      AlarmName: !Sub ${AWS::StackName}-CallDcmawAsyncCriFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "call-dcmaw-async-cri-${Environment}:live"
        - Name: FunctionName
          Value: !Ref CallDcmawAsyncCriFunction
        - Name: ExecutedVersion
          Value: !GetAtt CallDcmawAsyncCriFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ResetSessionIdentityFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the ResetSessionIdentityFunction."
      AlarmName: !Sub ${AWS::StackName}-ResetSessionIdentityFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "reset-session-identity-${Environment}:live"
        - Name: FunctionName
          Value: !Ref ResetSessionIdentityFunction
        - Name: ExecutedVersion
          Value: !GetAtt ResetSessionIdentityFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CheckReverificationIdentityFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the CheckReverificationIdentityFunction"
      AlarmName: !Sub ${AWS::StackName}-CheckReverificationIdentityFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "check-reverification-identity-${Environment}:live"
        - Name: FunctionName
          Value: !Ref CheckReverificationIdentityFunction
        - Name: ExecutedVersion
          Value: !GetAtt CheckReverificationIdentityFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ProcessCandidateIdentityFunctionErrorCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue alarm-alerts-topic
      AlarmDescription: !Sub "Error returned from the ProcessCandidateIdentityFunction."
      AlarmName: !Sub ${AWS::StackName}-ProcessCandidateIdentityFunction-ErrorCanary
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub "process-candidate-identity-${Environment}:live"
        - Name: FunctionName
          Value: !Ref ProcessCandidateIdentityFunction
        - Name: ExecutedVersion
          Value: !GetAtt ProcessCandidateIdentityFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  # App Config
  AppConfigApplication:
    Condition: IsBuildStagingIntProd
    Type: AWS::AppConfig::Application
    Properties:
      Name: !Sub "core-back-${Environment}"

  AppConfigEnvironment:
    Condition: IsBuildStagingIntProd
    Type: AWS::AppConfig::Environment
    Properties:
      Name: !Sub "core-back-${Environment}"
      ApplicationId: !Ref AppConfigApplication

  AppConfigConfigurationProfile:
    Condition: IsBuildStagingIntProd
    Type: AWS::AppConfig::ConfigurationProfile
    Properties:
      Name: !Sub "core-back-${Environment}"
      ApplicationId: !Ref AppConfigApplication
      LocationUri: "hosted"
      Validators:
        - Type: LAMBDA
          Content: !GetAtt ValidateAppConfigFunction.Arn

  AppConfigDeploymentStrategy:
    Condition: IsBuildStagingIntProd
    Type: AWS::AppConfig::DeploymentStrategy
    Properties:
      Name: !Sub "core-back-${Environment}"
      DeploymentDurationInMinutes: 0
      FinalBakeTimeInMinutes: 0
      GrowthFactor: 100
      GrowthType: LINEAR
      ReplicateTo: NONE

Outputs:
  IPVCorePrivateAPIGatewayID:
    Description: Core Back Private API Gateway ID
    Export:
      Name: !Sub "IPVCorePrivateAPIGatewayID-${Environment}"
    Value: !Ref IPVCorePrivateAPI
  IPVCoreExternalAPIGatewayID:
    Description: Core Back External API Gateway ID
    Export:
      Name: !Sub "IPVCoreExternalAPIGatewayID-${Environment}"
    Value: !Ref IPVCoreExternalAPI
  IPVCoreDynamoDBKmsKey:
    Description: Core Back DynamoDB KMS Key Export with Environment
    Value: !Ref DynamoDBKmsKey
    Export:
      Name: !Sub "CoreBackDynamoDBKmsKey-${Environment}"
  IPVCoreLoggingKmsKey:
    Description: Core Back Logging KMS Key Export with Environment
    Value: !GetAtt LoggingKmsKey.Arn
    Export:
      Name: !Sub "CoreBackLoggingKmsKeyArn-${Environment}"
