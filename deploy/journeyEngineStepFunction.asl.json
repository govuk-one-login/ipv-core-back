{
  "StartAt": "ProcessJourneyStep",
  "States": {
    "ProcessJourneyStep": {
      "Type": "Task",
      "Resource": "${IPVProcessJourneyEventFunctionArn}",
      "Parameters": {
        "journey.$": "$.journey",
        "ipvSessionId.$": "$$.Execution.Input.ipvSessionId",
        "ipAddress.$": "$$.Execution.Input.ipAddress",
        "featureSet.$": "$$.Execution.Input.featureSet"
      },
      "Next": "ProcessJourneyStepResult"
    },
    "ProcessJourneyStepResult": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.journey",
          "IsPresent": false,
          "Next": "Success"
        },
        {
          "Variable": "$.journey",
          "StringMatches": "/journey/check-existing-identity",
          "Next": "CheckExistingIdentityLambda"
        },
        {
          "Variable": "$.journey",
          "StringMatches": "/journey/reset-identity",
          "Next": "ResetIdentityLambda"
        },
        {
          "Variable": "$.journey",
          "StringMatches": "/journey/evaluate-gpg45-scores",
          "Next": "EvaluateGpg45ScoresFunction"
        },
        {
          "Variable": "$.journey",
          "StringMatches": "/journey/cri/build-oauth-request/*",
          "Next": "BuildCriOauthRequestLambda"
        },
        {
          "Variable": "$.journey",
          "StringMatches": "/journey/build-client-oauth-response",
          "Next": "BuildClientOauthResponseLambda"
        },
        {
          "Variable": "$.journey",
          "StringMatches": "/journey/ci-scoring",
          "Next": "CiScoringLambda"
        }
      ],
      "Default": "Success"
    },
    "CheckExistingIdentityLambda": {
      "Type": "Task",
      "Resource": "${CheckExistingIdentityFunctionArn}",
      "Parameters": {
        "journey.$": "$.journey",
        "ipvSessionId.$": "$$.Execution.Input.ipvSessionId",
        "ipAddress.$": "$$.Execution.Input.ipAddress",
        "clientOAuthSessionId.$": "$$.Execution.Input.clientOAuthSessionId",
        "featureSet.$": "$$.Execution.Input.featureSet"
      },
      "Next": "ProcessNextJourney"
    },
    "ResetIdentityLambda": {
      "Type": "Task",
      "Resource": "${ResetIdentityFunctionArn}",
      "Parameters": {
        "journey.$": "$.journey",
        "ipvSessionId.$": "$$.Execution.Input.ipvSessionId",
        "ipAddress.$": "$$.Execution.Input.ipAddress",
        "clientOAuthSessionId.$": "$$.Execution.Input.clientOAuthSessionId",
        "featureSet.$": "$$.Execution.Input.featureSet"
      },
      "Next": "ProcessNextJourney"
    },
    "EvaluateGpg45ScoresFunction": {
      "Type": "Task",
      "Resource": "${EvaluateGpg45ScoresFunctionArn}",
      "Parameters": {
        "journey.$": "$.journey",
        "ipvSessionId.$": "$$.Execution.Input.ipvSessionId",
        "ipAddress.$": "$$.Execution.Input.ipAddress",
        "clientOAuthSessionId.$": "$$.Execution.Input.clientOAuthSessionId",
        "featureSet.$": "$$.Execution.Input.featureSet"
      },
      "Next": "ProcessNextJourney"
    },
    "BuildCriOauthRequestLambda": {
      "Type": "Task",
      "Resource": "${BuildCriOauthRequestFunctionArn}",
      "Parameters": {
        "journey.$": "$.journey",
        "ipvSessionId.$": "$$.Execution.Input.ipvSessionId",
        "ipAddress.$": "$$.Execution.Input.ipAddress",
        "clientOAuthSessionId.$": "$$.Execution.Input.clientOAuthSessionId",
        "featureSet.$": "$$.Execution.Input.featureSet"
      },
      "Next": "ProcessNextJourney"
    },
    "BuildClientOauthResponseLambda": {
      "Type": "Task",
      "Resource": "${BuildClientOauthResponseFunctionArn}",
      "Parameters": {
        "journey.$": "$.journey",
        "ipvSessionId.$": "$$.Execution.Input.ipvSessionId",
        "ipAddress.$": "$$.Execution.Input.ipAddress",
        "clientOAuthSessionId.$": "$$.Execution.Input.clientOAuthSessionId",
        "featureSet.$": "$$.Execution.Input.featureSet"
      },
      "Next": "ProcessNextJourney"
    },
    "CiScoringLambda": {
      "Type": "Task",
      "Resource": "${CiScoringFunctionArn}",
      "Parameters": {
        "journey.$": "$.journey",
        "ipvSessionId.$": "$$.Execution.Input.ipvSessionId",
        "ipAddress.$": "$$.Execution.Input.ipAddress",
        "clientOAuthSessionId.$": "$$.Execution.Input.clientOAuthSessionId",
        "featureSet.$": "$$.Execution.Input.featureSet"
      },
      "Next": "ProcessNextJourney"
    },
    "ProcessNextJourney": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.journey",
          "IsPresent": false,
          "Next": "Success"
        },
        {
          "Variable": "$.journey",
          "StringMatches": "/journey/*",
          "Next": "ProcessJourneyStep"
        }
      ],
      "Default": "Success"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}
