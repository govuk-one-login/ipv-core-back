openapi: 3.0.3
info:
  title: "IPV Core Internal"
  description: "The internal api presented by IPV Core Back for use by IPV Core Front"
  version: "1.0.0"
paths:
  /request-config:
    get:
      description: "Returns details of all Credential Issuers (CRIs) configured for use with IPV Core"
      responses:
        200:
          description: "A list of cri configurations"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: object
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetCredentialIssuerConfig.Arn}:live/invocations
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
  /debug-credential-data:
    get:
      description: "Debug endpoint - only used by core-front debug page to get a list of current retrieved credentials for users journey"
      responses:
        200:
          description: "Map of retrieved cri credentials"
          content:
            application/json:
              schema:
                type: "object"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BuildDebugCredentialDataFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
  /session/initialise:
    post:
      description: "Creates a new ipv core-back session"
      responses:
        200:
          description: "The ipv sessionId"
          content:
            application/json:
              schema:
                type: "object"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InitialiseIpvSessionFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
  /journey/cri/access-token:
    post:
      description: "Called when a user returns from a CRI and will be responsible for completing the OAuth Requests with the cri and retrieveing the verifiable credential"
      responses:
        200:
          description: "Returns a redirect journeyResponse of '/journey/next'"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/journeyType"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RetrieveCriOauthAccessTokenFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
  /journey/cri/error:
    post:
      description: "Called when a user returns from a CRI with an error"
      responses:
        200:
          description: "Returns a redirect journeyResponse of '/journey/next'"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/journeyType"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IPVCredentialIssuerErrorFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
  /journey/build-client-oauth-response:
    post:
      description: "Called when the user has completed their user journey in IPV Core"
      responses:
        200:
          description: "Authorization Code and details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/journeyType"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BuildClientOauthResponseFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
  /journey/{journeyStep}:
    post:
      description: Called when the user selects a journey event. Triggers an express step function
      responses:
        200:
          description: "Returns either a redirect journey eventResponse or a page eventResponse "
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/journeyType"
      x-amazon-apigateway-integration:
        type: "aws"
        credentials:
          Fn::GetAtt: JourneyEngineStepFunctionApiGateWayIamRole.Arn
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:states:action/StartSyncExecution
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/x-www-form-urlencoded:
            Fn::Sub: |
              {
                "input": "{\"body\": $util.escapeJavaScript($input.json('$')), \"headers\": {#foreach($header in $input.params().header.keySet())\"$header\": \"$util.escapeJavaScript($input.params().header.get($header))\"#if($foreach.hasNext),#end#end},\"params\": {#foreach($param in $input.params().path.keySet())\"$param\": \"$util.escapeJavaScript($input.params().path.get($param))\"#if($foreach.hasNext),#end#end},\"query\": {#foreach($queryParam in $input.params().querystring.keySet())\"$queryParam\": \"$util.escapeJavaScript($input.params().querystring.get($queryParam))\"#if($foreach.hasNext),#end#end}}",
                "stateMachineArn": "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${JourneyEngineStepFunction.Name}"
              }
        responses:
          default:
            statusCode: 200
            responseTemplates:
              application/json: |
                #set ($bodyObj = $util.parseJson($input.body))
    
                #if ($bodyObj.status == "SUCCEEDED")
                  #set($lambdaOutput = $util.parseJson($bodyObj.output))
                  #set($context.responseOverride.status = $lambdaOutput.statusCode)
                  $lambdaOutput.body
                
                #elseif ($bodyObj.status == "FAILED")
                  #set($context.responseOverride.status = 500)
                  {
                    "cause": "$bodyObj.cause",
                    "error": "$bodyObj.error"
                  }
                #else
                  #set($context.responseOverride.status = 500)
                  $bodyObj
                #end

  /journey/cri/build-oauth-request/{criId}:
    post:
      description: Called when the frontend begins the CRI journey.
      responses:
        200:
          description: "Returns the id, ipvClientId and authorizationUrl for a CRI."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/journeyType"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BuildCriOauthRequestFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /journey/cri/validate/{criId}:
    post:
      description: "Returns a next or fail journey step, depending on if a CRI check meets requirements to continue the journey"
      responses:
        200:
          description: "Returns a journeyResponse of '/journey/next' or '/journey/fail'"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/journeyType"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ValidateCriCredentialFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /journey/evaluate-gpg45-scores:
    post:
      description: "Evaludate the gathered credentials against a desired GPG45 profile. Returns journey response or session end"
      responses:
        200:
          description: "Returns a journeyResponse or session end"
          content:
            application/json:
              schema:
                type: "object"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EvaluateGpg45ScoresFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /journey/select-cri:
    post:
      description: "Selects a CRI based on which CRIs the user has not visited. Returns journey response or journey fail"
      responses:
        200:
          description: "Returns a journeyResponse or journeyFail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/journeyType"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SelectCriFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

components:
  schemas:
    journeyType:
      type: object
      properties:
        page:
          type: string
          description: pageId of page to be displayed
        journey:
          type: string
          description: journeyId of an journey to take
        cri:
          type: object
          description: redirect to a cri (credential issuer)
          required: [ "id", "authorizeUrl", "request" ]
          properties:
            id:
              type: string
            authorizeUrl:
              type: string
            request:
              type: string
        client:
          type: object
          description: redirect to the oauth client, ending the session.
          required: [ "callbackUrl" ]
          properties:
            callbackUrl:
              type: string
      oneOf:
        - required: [ "page" ]
        - required: [ "client" ]
        - required: [ "cri" ]
        - required: [ "journey" ]
