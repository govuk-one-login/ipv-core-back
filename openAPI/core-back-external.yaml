openapi: 3.0.3
info:
  title: "IPV Core External"
  description: "The external api presented by IPV Core Back for use by non IPV Core services"
  version: "1.0.0"
paths:
  /token:
    post:
      description: "Exchange an authorization code for an access token"
      responses:
        200:
          description: "The access token"
          content:
            application/json:
              schema:
                type: "object"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IssueClientAccessTokenFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"

  /user-identity:
    get:
      description: "Returns a list of Verifiable Credentials representig the users identity"
      responses:
        200:
          description: "The list of Verifiable Credentials"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BuildUserIdentityFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"

  /.well-known/jwks.json:
    get:
      description: "returns JWKS Json"
      responses:
        200:
          description: "The list of public keys"
          content:
            application/json:
              schema:
                type: "object"
      x-amazon-apigateway-integration:
        type: "aws"
        httpMethod: "GET"
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:ssm:action/GetParametersByPath&Path=/${Environment}/deploy/core/outputs/'
        credentials:
          Fn::GetAtt: ["JWKSParamRole", "Arn"]
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$')){\"keys\":[#foreach($elem in $inputRoot.GetParametersByPathResponse.GetParametersByPathResult.Parameters)$elem.Value#if($foreach.hasNext),#end#end]}"
        passthroughBehavior: "when_no_match"

  /healthcheck:
    get:
      description: "returns a 200 for Route53 health checks to use"
      responses:
        200:
          description: "A healthcheck response"
          content:
            application/json:
              schema:
                type: "object"
      x-amazon-apigateway-integration:
        type: "MOCK"
        requestTemplates:
          application/json: "{\"statusCode\":200}"
        responses:
          200:
            statusCode: 200
            responseTemplates:
              application/json: "{\"healthcheck\": \"ok\"}"
