openapi: 3.0.3
info:
  title: "IPV Core External"
  description: "The external api presented by IPV Core Back for use by non IPV Core services"
  version: "1.0.0"
paths:
  /token:
    post:
      description: "Exchange an authorization code for an access token"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/tokenRequest"
      responses:
        200:
          description: "The access token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenResponse"
        400:
          description: "Bad request - e.g. an malformed request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oauthError"
        401:
          description: "Unauthorized - e.g. bad client authentication"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oauthError"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oauthError"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IssueClientAccessTokenFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"

  /user-identity:
    get:
      description: "List of Verifiable Credentials and claims representing the user's identity"
      security:
        - bearerAuth: []
      responses:
        200:
          description: >-
            The list of Verifiable Credentials
            Details of the identity claims can be found in the vocab schema: https://vocab.account.gov.uk/
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userIdentityResponse"
        401:
          description: "Unauthorized - e.g. missing access token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oauthError"
        403:
          description: "Forbidden - e.g. expired access token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oauthError"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oauthError"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BuildUserIdentityFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"

  /reverification:
    get:
      description: "Result of a reverification journey"
      security:
        - bearerAuth: []
      responses:
        200:
          description: "Reverification success or failure response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reverificationResponse"
        401:
          description: "Unauthorized - e.g. missing access token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oauthError"
        403:
          description: "Forbidden - e.g. expired access token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oauthError"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oauthError"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UserReverificationFunction.Arn}:live/invocations
        passthroughBehavior: "when_no_match"

  /.well-known/jwks.json:
    get:
      description: "JSON Web Key Set (JWKS) for IPV Core public keys"
      responses:
        200:
          description: "The list of public keys"
          headers:
            Cache-Control:
              description: "Cache-Control header"
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/jwksResponse"
        500:
          description: "Error fetching public keys"
          content: {}
      x-amazon-apigateway-integration:
        type: aws
        credentials:
          Fn::GetAtt: ExternalApiGatewayJwksS3Role.Arn
        httpMethod: GET
        uri:
          Fn::Sub:
            - arn:aws:apigateway:eu-west-2:s3:path/ipv-core-well-known-jwks-${env}/well-known-v2.json
            - env:
                Fn::If:
                  - IsDevelopment
                  - Fn::If:
                      - IsDev01
                      - dev01
                      - dev02
                  - Ref: Environment
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Cache-Control: "'max-age=300'"
          \[45\]\d{2}:
            statusCode: 500

  /healthcheck:
    get:
      description: "Stub endpoint for service health checks to use"
      responses:
        200:
          description: "A healthcheck response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/healthcheckResponse"
      x-amazon-apigateway-integration:
        type: "MOCK"
        requestTemplates:
          application/json: "{\"statusCode\":200}"
        responses:
          200:
            statusCode: 200
            responseTemplates:
              application/json: "{\"healthcheck\": \"ok\"}"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  schemas:
    tokenRequest:
      type: object
      properties:
        grant_type:
          type: string
          enum: ["authorization_code"]
        code:
          type: string
        redirect_uri:
          type: string
        client_id:
          type: string
        client_assertion_type:
          type: string
          enum: ["urn:ietf:params:oauth:client-assertion-type:jwt-bearer"]
        client_assertion:
          type: string
      required:
        - grant_type
        - code
        - redirect_uri
        - client_id
        - client_assertion_type
        - client_assertion

    tokenResponse:
      type: object
      properties:
        access_token:
          type: string
        scope:
          type: string
        token_type:
          type: string
        expires_in:
          type: number
      required:
        - access_token
        - scope
        - token_type
        - expires_in
      additionalProperties: false

    oauthError:
      type: object
      properties:
        error:
          type: string
        error_description:
          type: string
      required:
        - error
      additionalProperties: false

    userIdentityResponse:
      type: object
      properties:
        sub:
          type: string
        vot:
          type: string
        vtm:
          type: string
        "https://vocab.account.gov.uk/v1/credentialJWT":
          type: array
          items:
            type: string
        "https://vocab.account.gov.uk/v1/coreIdentity":
          type: "object"
          properties:
            name:
              type: array
              items:
                type: object
                # API Gateway doesn't support these external references
                # but they may be turned into $ref's by tooling that does
                description: https://vocab.account.gov.uk/v1/json-schemas/Name.json
            birthDate:
              type: array
              items:
                type: object
                # API Gateway doesn't support these external references
                # but they may be turned into $ref's by tooling that does
                description: https://vocab.account.gov.uk/v1/json-schemas/BirthDate.json
          required:
            - name
            - birthDate
          additionalProperties: false
        "https://vocab.account.gov.uk/v1/address":
          type: "array"
          items:
            type: object
            # API Gateway doesn't support these external references
            # but they may be turned into $ref's by tooling that does
            description: https://vocab.account.gov.uk/v1/json-schemas/PostalAddress.json
        "https://vocab.account.gov.uk/v1/passport":
          type: "array"
          items:
            type: object
            # API Gateway doesn't support these external references
            # but they may be turned into $ref's by tooling that does
            description: https://vocab.account.gov.uk/v1/json-schemas/PassportDetails.json
        "https://vocab.account.gov.uk/v1/drivingPermit":
          type: "array"
          items:
            type: object
            # API Gateway doesn't support these external references
            # but they may be turned into $ref's by tooling that does
            description: https://vocab.account.gov.uk/v1/json-schemas/DrivingPermit.json
        "https://vocab.account.gov.uk/v1/socialSecurityRecord":
          type: "array"
          items:
            type: object
            # API Gateway doesn't support these external references
            # but they may be turned into $ref's by tooling that does
            description: https://vocab.account.gov.uk/v1/json-schemas/SocialSecurityRecord.json
        "https://vocab.account.gov.uk/v1/returnCode":
          type: array
          items:
            type: object
            properties:
              code:
                type: string
            required:
              - code
            additionalProperties: false
      required:
        - sub
        - vot
        - vtm
        - "https://vocab.account.gov.uk/v1/credentialJWT"
        - "https://vocab.account.gov.uk/v1/returnCode"
      additionalProperties: false

    reverificationResponse:
      type: object
      properties:
        success:
          type: boolean
        sub:
          type: string
        failure_code:
          type: string
          enum: ["no_identity_available", "identity_check_incomplete", "identity_check_failed", "identity_did_not_match"]
        failure_description:
          type: string
      required:
        - success
        - sub
      additionalProperties: false

    jwksResponse:
      type: object
      properties:
        keys:
          type: array
          items:
            type: object
      required:
        - keys
      additionalProperties: false

    healthcheckResponse:
      type: object
      properties:
        healthcheck:
          type: string
      required:
        - healthcheck
      additionalProperties: false
