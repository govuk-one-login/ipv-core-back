plugins {
	id "java"
	id "idea"
	id "jacoco"
	id 'io.freefair.aspectj.post-compile-weaving' version '6.3.0'
}

repositories {
	mavenCentral()
}

dependencies {

	implementation "com.amazonaws:aws-lambda-java-core:$rootProject.ext.dependencyVersions.awsLambdaJavaCore",
			"com.amazonaws:aws-lambda-java-events:$rootProject.ext.dependencyVersions.awsLambdaJavaEvents",
			"com.google.code.gson:gson:$rootProject.ext.dependencyVersions.gson",
			"com.nimbusds:oauth2-oidc-sdk:$rootProject.ext.dependencyVersions.nimbusdsOauth2OidcSdk",
			project(":lib")

	aspect "software.amazon.lambda:powertools-logging:$rootProject.ext.dependencyVersions.powertoolsLogging",
			"software.amazon.lambda:powertools-tracing:$rootProject.ext.dependencyVersions.powertoolsTracing"

	compileOnly "org.projectlombok:lombok:$rootProject.ext.dependencyVersions.lombok"
	annotationProcessor "org.projectlombok:lombok:$rootProject.ext.dependencyVersions.lombok"

	testImplementation "org.junit.jupiter:junit-jupiter:5.8.2",
			"org.mockito:mockito-core:4.1.0",
			"org.mockito:mockito-junit-jupiter:4.1.0",
			project(":lib").sourceSets.test.output
}

java {
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}

task buildZip(type: Zip) {
	from compileJava
	from processResources
	destinationDirectory = file("$rootDir/dist")
	into("lib") {
		from configurations.runtimeClasspath
	}
}

test {
	// Configures environment variable to avoid initialization of AWS X-Ray segments for each tests
	environment "LAMBDA_TASK_ROOT", "handler"
	useJUnitPlatform ()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
	}
}
