plugins {
	id "java"
	id "idea"
	id "jacoco"
	alias libs.plugins.postCompileWeaving
}

repositories {
	mavenCentral()
}

dependencies {

	implementation libs.bundles.awsLambda,
			libs.nimbusdsOauth2OidcSdk,
			project(":libs:common-services"),
			project(":libs:cimit-service"),
			project(":libs:audit-service"),
			project(":libs:user-identity-service"),
			project(":libs:verifiable-credentials")

	aspect libs.powertoolsLogging,
			libs.powertoolsTracing,
			libs.aspectj

	testImplementation libs.junitJupiter,
			libs.mockitoJunit,
			libs.pactProviderJunit,
			project(path: ':libs:common-services', configuration: 'tests'),
			project(path: ':libs:pact-test-helpers')

	testRuntimeOnly libs.junitPlatform
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

test {
	// Configures environment variable to avoid initialization of AWS X-Ray segments for each tests
	environment "LAMBDA_TASK_ROOT", "handler"
	useJUnitPlatform ()
	finalizedBy jacocoTestReport
	exclude 'uk/gov/di/ipv/core/builduseridentity/pact/**'
}

task pactProviderTests (type: Test) {
	useJUnitPlatform()
	include 'uk/gov/di/ipv/core/builduseridentity/pact/**'
	systemProperties['pact.verifier.publishResults'] = "true"
	systemProperties['pact.provider.branch'] = "${System.env.GIT_BRANCH}"
	systemProperties['pact.provider.version'] = "${System.env.GIT_SHA}"
	systemProperties['pact.consumerversionselectors.rawjson'] = "{ \"mainBranch\": true, \"deployedOrReleased\": true }"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
	}
}
