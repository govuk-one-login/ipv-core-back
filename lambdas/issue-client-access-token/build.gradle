plugins {
	id "java"
	id "idea"
	id "jacoco"
	alias libs.plugins.postCompileWeaving
}

configurations {
	mockitoAgent
}

dependencies {

	implementation platform(libs.awsSdkBom),
			libs.awsSdkDynamodbEnhanced,
			libs.bundles.awsLambda,
			libs.commonsCodec,
			project(":libs:common-services"),
			project(":libs:oauth-key-service")

	compileOnly libs.lombok
	annotationProcessor libs.lombok

	testImplementation libs.hamcrest,
			libs.junitJupiter,
			libs.mockitoJunit,
			libs.pactProviderJunit,
			project(path: ':libs:common-services', configuration: 'tests'),
			project(path: ':libs:test-helpers')

	mockitoAgent(libs.mockitoCore) {
		transitive = false
	}

	testRuntimeOnly libs.junitPlatform
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

test {
	useJUnitPlatform ()
	finalizedBy jacocoTestReport
	jvmArgs += "-javaagent:${configurations.mockitoAgent.asPath}"
	exclude 'uk/gov/di/ipv/core/issueclientaccesstoken/pact/**'
}

task pactProviderTests (type: Test) {
	useJUnitPlatform()
	include 'uk/gov/di/ipv/core/issueclientaccesstoken/pact/**'
	systemProperties['pact.verifier.publishResults'] = "true"
	systemProperties['pact.provider.branch'] = "${System.env.GIT_BRANCH}"
	systemProperties['pact.provider.version'] = "${System.env.GIT_SHA}"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
	}
}
