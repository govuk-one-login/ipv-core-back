name: Update Address
description: >-
  The route a returning user must take to update
  their address.

states:
  # Entry points

  START:
    events:
      next:
        targetState: RESET_IDENTITY_ADDRESS_CHANGE

  # Parent States

  CRI_STATE:
    events:
      not-found:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS
      fail-with-no-ci:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS
      error:
        targetJourney: TECHNICAL_ERROR
        targetState: ERROR
      access-denied:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS
      invalid-request:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS
      enhanced-verification:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS_INVALID_ID
      temporarily-unavailable:
        targetJourney: TECHNICAL_ERROR
        targetState: ERROR
      fail-with-ci:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS_INVALID_ID
      vcs-not-correlated:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS
      alternate-doc-invalid-dl:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS_INVALID_ID
      alternate-doc-invalid-passport:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS_INVALID_ID
      dl-auth-source-check:
        targetJourney: TECHNICAL_ERROR
        targetState: ERROR

  # Journey States

  RESET_IDENTITY_ADDRESS_CHANGE:
    response:
      type: process
      lambda: reset-session-identity
      lambdaInput:
        resetType: ADDRESS_ONLY_CHANGE
    events:
      next:
        targetState: ADDRESS_AND_FRAUD_UPDATE_ADDRESS
        checkFeatureFlag:
          internationalAddressEnabled:
            targetState: ADDRESS_AND_FRAUD_UPDATE_ADDRESS
            targetEntryEvent: internationalUser

  ADDRESS_AND_FRAUD_UPDATE_ADDRESS:
    nestedJourney: ADDRESS_AND_FRAUD
    exitEvents:
      next:
        targetState: EVALUATE_GPG45_SCORES_UPDATE_ADDRESS
        checkFeatureFlag:
          processCandidateIdentity:
            targetState: PROCESS_UPDATE_IDENTITY
      enhanced-verification:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS
      fraud-fail-with-no-ci:
        targetState: EVALUATE_GPG45_SCORES_UPDATE_ADDRESS
        checkFeatureFlag:
          processCandidateIdentity:
            targetState: PROCESS_UPDATE_IDENTITY

  EVALUATE_GPG45_SCORES_UPDATE_ADDRESS:
    response:
      type: process
      lambda: evaluate-gpg45-scores
    events:
      met:
        targetState: CRI_TICF_BEFORE_SUCCESS_UPDATE_ADDRESS
      unmet:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS
      vcs-not-correlated:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS

  STORE_IDENTITY_BEFORE_SUCCESS:
    response:
      type: process
      lambda: store-identity
      lambdaInput:
        identityType: UPDATE
    events:
      identity-stored:
        targetState: IPV_SUCCESS_PAGE_UPDATE_ADDRESS
        auditEvents:
          - IPV_USER_DETAILS_UPDATE_END
        auditContext:
          successful: true
      error:
        targetJourney: TECHNICAL_ERROR
        targetState: ERROR

  CRI_TICF_BEFORE_SUCCESS_UPDATE_ADDRESS:
    response:
      type: process
      lambda: call-ticf-cri
    events:
      next:
        targetState: STORE_IDENTITY_BEFORE_SUCCESS
      enhanced-verification:
        targetJourney: FAILED
        targetState: FAILED_NO_TICF
      alternate-doc-invalid-dl:
        targetJourney: FAILED
        targetState: FAILED_NO_TICF
      alternate-doc-invalid-passport:
        targetJourney: FAILED
        targetState: FAILED_NO_TICF
      fail-with-ci:
        targetJourney: FAILED
        targetState: FAILED_NO_TICF
      error:
        targetJourney: TECHNICAL_ERROR
        targetState: ERROR_NO_TICF

  PROCESS_UPDATE_IDENTITY:
    response:
      type: process
      lambda: process-candidate-identity
      lambdaInput:
        identityType: UPDATE
    events:
      next:
        targetState: IPV_SUCCESS_PAGE_UPDATE_ADDRESS
        auditEvents:
          - IPV_USER_DETAILS_UPDATE_END
        auditContext:
          successful: true
      # TODO: should the process identity lambda perform the TICF check even in the failure case?
      # is that ever undesirable?
      coi-check-failed:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS
      vcs-not-correlated:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS
      profile-unmet:
        targetJourney: FAILED
        targetState: FAILED_CONFIRM_DETAILS
      fail-with-ci:
        targetJourney: FAILED
        targetState: FAILED_NO_TICF
      enhanced-verification:
        targetJourney: FAILED
        targetState: FAILED_NO_TICF
      alternate-doc-invalid-dl:
        targetJourney: FAILED
        targetState: FAILED_NO_TICF
      alternate-doc-invalid-passport:
        targetJourney: FAILED
        targetState: FAILED_NO_TICF
      error:
        targetJourney: TECHNICAL_ERROR
        targetState: ERROR

  IPV_SUCCESS_PAGE_UPDATE_ADDRESS:
    response:
      type: page
      pageId: page-ipv-success
      context: updateIdentity
    events:
      next:
        targetState: RETURN_TO_RP

  RETURN_TO_RP:
    response:
      type: process
      lambda: build-client-oauth-response
