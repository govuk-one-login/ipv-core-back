plugins {
	// Apply the java-library plugin for API and implementation separation.
	id 'java-library'
	id "idea"
	id "jacoco"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation platform(libs.awsSdkBom),
			libs.awsJavaSdkDynamodb,
			libs.awsJavaSdkLambda,
			libs.awsLambdaJavaEvents,
			libs.commonsCodec,
			libs.gson,
			libs.nimbusdsOauth2OidcSdk,
			libs.awsJavaSdkDynamodbEnhanced,
			libs.powertoolsLogging,
			libs.powertoolsParameters,
			project(":libs:journey-uris")

	compileOnly libs.lombok
	annotationProcessor libs.lombok

	testImplementation libs.junitJupiter,
			libs.mockitoJunit,
			libs.systemStubs,
			libs.hamcrest

	testRuntimeOnly libs.junitPlatform

	testCompileOnly libs.lombok
	testAnnotationProcessor libs.lombok
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

tasks.withType(Jar).configureEach { Jar jar ->
	jar.preserveFileTimestamps = false
	jar.reproducibleFileOrder = true
}

tasks.named('jar') {
	manifest {
		attributes('Implementation-Title': project.name,
		'Implementation-Version': project.version)
	}
}

test {
	useJUnitPlatform ()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
	}
}

configurations {
	tests.extendsFrom(testImplementation)
}

tasks.register('jarTest', Jar) {
	from sourceSets.test.output
	archiveClassifier.set('tests')
}
artifacts {
	tests jarTest
}
