plugins {
	id "java"
	alias libs.plugins.sonar
	alias libs.plugins.spotless
	id "au.com.dius.pact" version "4.6.5"
}

sonar {
	properties {
		property "sonar.projectKey", "ipv-core-back"
		property "sonar.organization", "govuk-one-login"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.exclusions", "**/CustomAppConfigProvider.java"
	}
}

spotless {
	java {
		target "**/src/**/*.java"
		googleJavaFormat("1.13.0").aosp()
		importOrder "", "javax", "java", "\\#"
		endWithNewline()
		toggleOffOn()
	}
	groovyGradle {
		target '**/*.gradle'
		greclipse()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

subprojects {
	task allDeps(type: DependencyReportTask) {}
	configurations.all {
		exclude group: 'software.amazon.awssdk', module: 'apache-client'
	}

	tasks.withType(Test) {
		// Configures environment variables to avoid errors in AWS X-Ray and EMF loggers
		environment "LAMBDA_TASK_ROOT", "handler"
		environment 'AWS_EMF_ENVIRONMENT', 'Local'
		environment 'AWS_XRAY_CONTEXT_MISSING', 'IGNORE_ERROR'

		// Class data sharing doesn't work with the tests anyway, and this suppresses the warning
		jvmArgs('-Xshare:off')
	}
}

allprojects {
	plugins.withType(JavaPlugin).whenPluginAdded {
		dependencies {
			constraints {
				implementation("com.amazonaws:aws-xray-recorder-sdk-aws-sdk-v2:2.18.2") {
					because "older versions are incompatible with Jackson > 2.15"
				}
			}
		}
	}
}

pact {
	publish {
		pactDirectory = "$rootDir/build/pacts"
		pactBrokerUrl = "${System.env.PACT_URL}?testSource=${System.env.PACT_BROKER_SOURCE_SECRET_DEV}"
		pactBrokerUsername = "${System.env.PACT_USER}"
		pactBrokerPassword = "${System.env.PACT_PASSWORD}"
		consumerVersion = "${System.env.GIT_SHA}"
		consumerBranch = "${System.env.GIT_BRANCH}"
	}
}
