name: Build api-tests image

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  build-image-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN: ${{
        inputs.environment == 'dev'          && secrets.BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN_DEV_SHARED ||
        inputs.environment == 'dev-perf'     && secrets.BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN_DEV_PERF ||
        inputs.environment == 'dev-mikec'    && secrets.BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN_DEV_MIKEC ||
        inputs.environment == 'dev-danc'     && secrets.BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN_DEV_DANC ||
        inputs.environment == 'dev-joee'     && secrets.BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN_DEV_JOEE ||
        inputs.environment == 'dev-dominikt' && secrets.BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN_DEV_DOMINIKT ||
        inputs.environment == 'dev-theab'    && secrets.BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN_DEV_THEAB ||
        inputs.environment == 'dev-amrits'   && secrets.BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN_DEV_AMRITS ||
        inputs.environment == 'dev-alir'     && secrets.BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN_DEV_ALIR ||
        inputs.environment == 'dev-patrickb' && secrets.BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN_DEV_PATRICKB ||
        secrets.BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN
      }}
      BUILD_API_TESTS_ECR_REPO: ${{
        inputs.environment == 'dev'          && secrets.BUILD_API_TESTS_ECR_REPO_DEV_SHARED ||
        inputs.environment == 'dev-perf'     && secrets.BUILD_API_TESTS_ECR_REPO_DEV_PERF ||
        inputs.environment == 'dev-mikec'    && secrets.BUILD_API_TESTS_ECR_REPO_DEV_MIKEC ||
        inputs.environment == 'dev-danc'     && secrets.BUILD_API_TESTS_ECR_REPO_DEV_DANC ||
        inputs.environment == 'dev-joee'     && secrets.BUILD_API_TESTS_ECR_REPO_DEV_JOEE ||
        inputs.environment == 'dev-dominikt' && secrets.BUILD_API_TESTS_ECR_REPO_DEV_DOMINIKT ||
        inputs.environment == 'dev-theab'    && secrets.BUILD_API_TESTS_ECR_REPO_DEV_THEAB ||
        inputs.environment == 'dev-amrits'   && secrets.BUILD_API_TESTS_ECR_REPO_DEV_AMRITS ||
        inputs.environment == 'dev-alir'     && secrets.BUILD_API_TESTS_ECR_REPO_DEV_ALIR ||
        inputs.environment == 'dev-patrickb' && secrets.BUILD_API_TESTS_ECR_REPO_DEV_PATRICKB ||
        secrets.BUILD_API_TESTS_ECR_REPO
      }}
      BUILD_CONTAINER_SIGN_KMS_KEY: ${{
        inputs.environment == 'dev'          && secrets.BUILD_CONTAINER_SIGN_KMS_KEY_DEV_SHARED ||
        inputs.environment == 'dev-perf'     && secrets.BUILD_CONTAINER_SIGN_KMS_KEY_DEV_PERF ||
        inputs.environment == 'dev-mikec'    && secrets.BUILD_CONTAINER_SIGN_KMS_KEY_DEV_MIKEC ||
        inputs.environment == 'dev-danc'     && secrets.BUILD_CONTAINER_SIGN_KMS_KEY_DEV_DANC ||
        inputs.environment == 'dev-joee'     && secrets.BUILD_CONTAINER_SIGN_KMS_KEY_DEV_JOEE ||
        inputs.environment == 'dev-dominikt' && secrets.BUILD_CONTAINER_SIGN_KMS_KEY_DEV_DOMINIKT ||
        inputs.environment == 'dev-theab'    && secrets.BUILD_CONTAINER_SIGN_KMS_KEY_DEV_THEAB ||
        inputs.environment == 'dev-amrits'   && secrets.BUILD_CONTAINER_SIGN_KMS_KEY_DEV_AMRITS ||
        inputs.environment == 'dev-alir'     && secrets.BUILD_CONTAINER_SIGN_KMS_KEY_DEV_ALIR ||
        inputs.environment == 'dev-patrickb' && secrets.BUILD_CONTAINER_SIGN_KMS_KEY_DEV_PATRICKB ||
        secrets.BUILD_CONTAINER_SIGN_KMS_KEY
      }}
    permissions:
      id-token: write
      packages: read
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2
        with:
          cosign-release: 'v1.9.0'

      - name: Set up build AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.BUILD_API_TESTS_IMAGE_ECR_REPO_GHA_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Login to build ECR
        id: login-build-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, push, and sign api testing image to build
        env:
          BUILD_ECR_REG: ${{ steps.login-build-ecr.outputs.registry }}
          SHA: ${{ github.sha }}
        run: |
          docker build --build-arg GITHUB_PAT="${{ secrets.GITHUB_TOKEN }}" \
            -t "${BUILD_ECR_REG}/${BUILD_API_TESTS_ECR_REPO}:latest" \
            -t "${BUILD_ECR_REG}/${BUILD_API_TESTS_ECR_REPO}:${SHA}" \
            -f api-tests/secure-pipeline/api-tests.Dockerfile .

          docker push "${BUILD_ECR_REG}/${BUILD_API_TESTS_ECR_REPO}:latest"
          docker push "${BUILD_ECR_REG}/${BUILD_API_TESTS_ECR_REPO}:${SHA}"

          cosign sign --key "awskms:///${BUILD_CONTAINER_SIGN_KMS_KEY}" "${BUILD_ECR_REG}/${BUILD_API_TESTS_ECR_REPO}:latest"
          cosign sign --key "awskms:///${BUILD_CONTAINER_SIGN_KMS_KEY}" "${BUILD_ECR_REG}/${BUILD_API_TESTS_ECR_REPO}:${SHA}"
