# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
    paths:
      - 'journey-map/**'
      - 'lambdas/process-journey-event/src/main/resources/statemachine/journey-maps/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Copy yaml
        run: 'cp -r ./lambdas/process-journey-event/src/main/resources/statemachine/journey-maps/* ./journey-map/public/'
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './journey-map/public/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-aws:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      AWS_REGION: eu-west-2
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.GH_ACTIONS_ROLE_ARN_JOURNEY_MAP }}
          aws-region: eu-west-2

      - name: Set up esbuild
        run: curl -fsSL https://esbuild.github.io/dl/latest | sh

      - name: Add esbuild to path
        run: echo "${GITHUB_WORKSPACE}" >> $GITHUB_PATH

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@v2

      - name: SAM Validate
        working-directory: ./journey-map/deploy
        run: sam validate --region ${{ env.AWS_REGION }}

      - name: SAM build and test
        working-directory: ./journey-map/deploy
        run: sam build

      - name: Deploy SAM app
        uses: govuk-one-login/devplatform-upload-action@v3.9
        with:
          artifact-bucket-name: ${{ secrets.ARTIFACT_BUCKET_NAME_JOURNEY_MAP }}
          signing-profile-name: ${{ secrets.SIGNING_PROFILE_NAME }}
          working-directory: ./journey-map/deploy
          template-file: .aws-sam/build/template.yaml
