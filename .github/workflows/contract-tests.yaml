#Contract test workflow for JAVA (using gradle)
name: Run Java Contract Tests

#Set up GitHub secrets with PACT_USER, PACT_PASSWORD, PACT_URL, PACT_BROKER_SOURCE_SECRET_DEV
env:
  PACT_USER: ${{ secrets.PACT_USER }}
  PACT_PASSWORD: ${{ secrets.PACT_PASSWORD }}
  PACT_URL: ${{ secrets.PACT_URL }}
  PACT_BROKER_SOURCE_SECRET_DEV: ${{ secrets.PACT_BROKER_SOURCE_SECRET_DEV }}
  GIT_BRANCH: ${{ github.ref_name }}
  CONSUMER_APP_VERSION: ${{ github.sha }}

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize

jobs:
  contract-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Run contract tests
        run: ./gradlew --parallel contractTests
      - name: Upload pacts to broker with gradle
        if: ${{ github.actor != 'dependabot[bot]' && github.event_name != 'merge_group' }}
        run: ./gradlew pactPublish