name: Secure Pipeline: Test, Build, Package & Ship Core Back

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Secure Pipeline package for build
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-west-2
      ENVIRONMENT: build
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.3

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@v1

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Integration tests
        env:
          IPV_SESSIONS_TABLE_NAME: sessions-build
          ENVIRONMENT: build
        run: ./gradlew intTest

      - name: Generate code signing config
        id: signing
        uses: rusty-actions/sam-code-signing-config@39f63740a9f8622eb9b6755413a31a6013a62a86
        with:
          template: ./deploy-sp/template.yaml
          profile: ${{ secrets.SIGNING_PROFILE_NAME }}

      - name: SAM validate
        working-directory: ./deploy-sp
        run: sam validate --region ${{ env.AWS_REGION }

      - name: SAM build and test
        working-directory: ./deploy-sp
        run: sam build

      - name: SAM package
        working-directory: ./deploy-sp
        env:
          ARTIFACT_BUCKET: ${{ secrets.ARTIFACT_BUCKET_NAME }}
        run: |
          sam package .yaml  \
            ${{ steps.signing.outputs.signing_config }} \
            --s3-bucket=$ARTIFACT_BUCKET \
            --region=${{ env.AWS_REGION }} --output-template-file=cf-template.yaml

      - name: Write git commit sha to git_commit.txt
        working-directory: ./deploy-sp
        run: echo "$GITHUB_SHA" > git_commit.txt

      - name: Zip the cloudformation template and git commit sha
        working-directory: ./deploy-sp
        run: zip template.zip cf-template.yaml git_commit.txt

      - name: Upload zipped cloudformation artifact to S3
        working-directory: ./deploy-sp
        env:
          ARTIFACT_BUCKET: ${{ secrets.ARTIFACT_BUCKET_NAME }}
        run: aws s3 cp template.zip "s3://$ARTIFACT_BUCKET/template.zip" --metadata "repository=$GITHUB_REPOSITORY,commitsha=$GITHUB_SHA"
