name: Secure Pipeline Test, Build, Package & Ship Core Back

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/secure-post-merge.yml'
      - '.github/workflows/secure-post-merge-notags.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: Which user environment to deploy to.
        required: true
        type: choice
        options:
          - dev
          - dev-perf
          - dev-mikec
          - dev-danc
          - dev-joee
          - dev-dominikt
          - dev-theab
          - dev-amrits
          - dev-alir
          - dev-patrickb

jobs:
  check-if-api-tests-changed:
    runs-on: ubuntu-latest
    outputs:
      api-tests-changed: ${{ steps.get-changed-files.outputs.any_changed }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed api-tests files
        id: get-changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files: |
            api-tests/**
            .github/workflows/secure-pipeline-api-tests-image.yml

      - name: List changed files
        env:
          CHANGED_FILES: ${{ steps.get-changed-files.outputs.all_changed_files }}
        run: |
          for file in $CHANGED_FILES; do
            echo "$file was changed"
          done

  build-test-images-if-needed:
    needs: check-if-api-tests-changed
    if: ${{ needs.check-if-api-tests-changed.outputs.api-tests-changed == 'true' }}
    uses: govuk-one-login/ipv-core-back/.github/workflows/secure-pipeline-api-tests-image.yml@main
    with:
      environment: ${{ inputs.environment || 'build' }}
    secrets: inherit # pragma: allowlist secret
    permissions:
      id-token: write
      packages: read
      contents: read

  deploy:
    needs: build-test-images-if-needed
    if: '!failure()'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      AWS_REGION: eu-west-2
      ENVIRONMENT: ${{ inputs.environment || 'build' }}
      GH_ACTIONS_ROLE_ARN: ${{
        inputs.environment == 'dev'          && secrets.GH_ACTIONS_ROLE_ARN_DEV_SHARED ||
        inputs.environment == 'dev-perf'     && secrets.GH_ACTIONS_ROLE_ARN_DEV_PERF ||
        inputs.environment == 'dev-mikec'    && secrets.GH_ACTIONS_ROLE_ARN_DEV_MIKEC ||
        inputs.environment == 'dev-danc'     && secrets.GH_ACTIONS_ROLE_ARN_DEV_DANC ||
        inputs.environment == 'dev-joee'     && secrets.GH_ACTIONS_ROLE_ARN_DEV_JOEE ||
        inputs.environment == 'dev-dominikt' && secrets.GH_ACTIONS_ROLE_ARN_DEV_DOMINIKT ||
        inputs.environment == 'dev-theab'    && secrets.GH_ACTIONS_ROLE_ARN_DEV_THEAB ||
        inputs.environment == 'dev-amrits'   && secrets.GH_ACTIONS_ROLE_ARN_DEV_AMRITS ||
        inputs.environment == 'dev-alir'     && secrets.GH_ACTIONS_ROLE_ARN_DEV_ALIR ||
        inputs.environment == 'dev-patrickb' && secrets.GH_ACTIONS_ROLE_ARN_DEV_PATRICKB ||
        secrets.GH_ACTIONS_ROLE_ARN
      }}
      ARTIFACT_BUCKET_NAME: ${{
        inputs.environment == 'dev'          && secrets.ARTIFACT_BUCKET_NAME_DEV_SHARED ||
        inputs.environment == 'dev-perf'     && secrets.ARTIFACT_BUCKET_NAME_DEV_PERF ||
        inputs.environment == 'dev-mikec'    && secrets.ARTIFACT_BUCKET_NAME_DEV_MIKEC ||
        inputs.environment == 'dev-danc'     && secrets.ARTIFACT_BUCKET_NAME_DEV_DANC ||
        inputs.environment == 'dev-joee'     && secrets.ARTIFACT_BUCKET_NAME_DEV_JOEE ||
        inputs.environment == 'dev-dominikt' && secrets.ARTIFACT_BUCKET_NAME_DEV_DOMINIKT ||
        inputs.environment == 'dev-theab'    && secrets.ARTIFACT_BUCKET_NAME_DEV_THEAB ||
        inputs.environment == 'dev-amrits'   && secrets.ARTIFACT_BUCKET_NAME_DEV_AMRITS ||
        inputs.environment == 'dev-alir'     && secrets.ARTIFACT_BUCKET_NAME_DEV_ALIR ||
        inputs.environment == 'dev-patrickb' && secrets.ARTIFACT_BUCKET_NAME_DEV_PATRICKB ||
        secrets.ARTIFACT_BUCKET_NAME
      }}
      SIGNING_PROFILE_NAME: ${{
        inputs.environment == 'dev'          && secrets.SIGNING_PROFILE_NAME_DEV_SHARED ||
        inputs.environment == 'dev-perf'     && secrets.SIGNING_PROFILE_NAME_DEV_PERF ||
        inputs.environment == 'dev-mikec'    && secrets.SIGNING_PROFILE_NAME_DEV_MIKEC ||
        inputs.environment == 'dev-danc'     && secrets.SIGNING_PROFILE_NAME_DEV_DANC ||
        inputs.environment == 'dev-joee'     && secrets.SIGNING_PROFILE_NAME_DEV_JOEE ||
        inputs.environment == 'dev-dominikt' && secrets.SIGNING_PROFILE_NAME_DEV_DOMINIKT ||
        inputs.environment == 'dev-theab'    && secrets.SIGNING_PROFILE_NAME_DEV_THEAB ||
        inputs.environment == 'dev-amrits'   && secrets.SIGNING_PROFILE_NAME_DEV_AMRITS ||
        inputs.environment == 'dev-alir'     && secrets.SIGNING_PROFILE_NAME_DEV_ALIR ||
        inputs.environment == 'dev-patrickb' && secrets.SIGNING_PROFILE_NAME_DEV_PATRICKB ||
        secrets.SIGNING_PROFILE_NAME
      }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@06832c7b30a0129d7fb559bcc6e43d26f6374244 # v4.3.1
        with:
          gradle-version: 8.2.1

      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Fix SAM cryptography issue https://github.com/aws/aws-sam-cli/issues/4527
        run: |
          "$(dirname "$(readlink "$(which sam)")")/pip" install --force-reinstall "cryptography==38.0.4"

      - name: Set up AWS creds For Pipeline
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: SAM validate
        working-directory: ./deploy
        run: sam validate --region "${{ env.AWS_REGION }}"

      - name: SAM build and test
        working-directory: ./deploy
        run: sam build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy SAM app
        uses: govuk-one-login/devplatform-upload-action@v3.9
        with:
          artifact-bucket-name: ${{ env.ARTIFACT_BUCKET_NAME }}
          signing-profile-name: ${{ env.SIGNING_PROFILE_NAME }}
          working-directory: ./deploy
          template-file: .aws-sam/build/template.yaml
